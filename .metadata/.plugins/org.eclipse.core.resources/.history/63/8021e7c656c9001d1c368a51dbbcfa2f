/*-----------------------------------------------------------------------
           I M P L E M E N T A T I O N    M O D U L E
-------------------------------------------------------------------------

COPYRIGHT: (C)

PRODUCT:   ?NewTemplate?

TITLE:     ?NewTemplate?

-------------------------------------------------------------------------


------------------------------------------------------------------------*/

//**************************************************************************************
//*** INFO sämtliche ?NewTemplate? - Einträge sind durch den Filenamen zu ersetzen   ***
//**************************************************************************************

//  -------------------------------------------------
//  1.     I N T E R F A C E    D E F I N I T I O N S
//  -------------------------------------------------

#include "Taster_Treiber.h"

//  -------------------------------------------
//  2.     G L O B A L    D E F I N I T I O N S
//  -------------------------------------------

//  -----------------------------------------------
//  3.     I N T E R N A L    D E F I N I T I O N S
//  -----------------------------------------------
static bool TASTER_1_STATUS = false;
static bool TASTER_2_STATUS = false;
static bool TASTER_3_STATUS = false;

//  -------------------------------------------
//  4.     I N T E R N A L    F U N C T I O N S
//  -------------------------------------------
void Taster_Treiber_Task(void *argument)
{
    while (1)
    {
        TASTER_1_STATUS = HAL_GPIO_ReadPin(GPIOA, TASTER_1_Pin);
        TASTER_2_STATUS = !HAL_GPIO_ReadPin(GPIOA, TASTER_2_Pin);
        TASTER_3_STATUS = HAL_GPIO_ReadPin(TASTER_3_GPIO_Port, TASTER_3_Pin);
        osDelay(50);
    }
}

//  ---------------------------------------
//  5.     G L O B A L    F U N C T I O N S
//  ---------------------------------------
bool Taster_Get(int taster)
{
    switch (taster)
    {
    case TASTER_1:
        return TASTER_1_STATUS;
    case TASTER_2:
        return TASTER_2_STATUS;
    case TASTER_3:
        return TASTER_3_STATUS;
    default:
        return false;
    }
}
