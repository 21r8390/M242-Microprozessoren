<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1427px" preserveAspectRatio="none" style="width:2679px;height:1427px;background:#FFFFFF;" version="1.1" viewBox="0 0 2679 1427" width="2679px" zoomAndPan="magnify"><defs/><g><!--MD5=[7bb66ef33c72b8468f292779fd990855]
cluster StateEventFiles--><g id="cluster_StateEventFiles"><rect fill="none" height="1058.5" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="641" x="7" y="7"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="111" x="272" y="23.5332">StateEventFiles</text></g><!--MD5=[06d07874b31b21c282b1021122bda260]
cluster Drivers--><g id="cluster_Drivers"><rect fill="none" height="811.5" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="1993" x="680" y="610"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="52" x="1650.5" y="626.5332">Drivers</text></g><!--MD5=[ce6ff150f7db3950f579d32b927a40a8]
class StateEvent--><g id="elem_StateEvent"><rect codeLine="4" fill="#F1F1F1" height="477.0156" id="StateEvent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="284" x="159" y="43"/><ellipse cx="262.25" cy="59" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M265.0156,54.875 Q265.1719,54.6563 265.3594,54.5469 Q265.5469,54.4375 265.7656,54.4375 Q266.1406,54.4375 266.375,54.7031 Q266.6094,54.9531 266.6094,55.5625 L266.6094,57.0156 Q266.6094,57.625 266.375,57.8906 Q266.1406,58.1563 265.7656,58.1563 Q265.4219,58.1563 265.2188,57.9531 Q265.0156,57.7656 264.9063,57.25 Q264.8594,56.8906 264.6719,56.7031 Q264.3438,56.3281 263.7344,56.1094 Q263.125,55.8906 262.5,55.8906 Q261.7344,55.8906 261.0938,56.2188 Q260.4688,56.5469 259.9688,57.2969 Q259.4844,58.0469 259.4844,59.0781 L259.4844,60.1719 Q259.4844,61.4063 260.375,62.2344 Q261.2656,63.0469 262.8594,63.0469 Q263.7969,63.0469 264.4531,62.7969 Q264.8438,62.6406 265.2656,62.2031 Q265.5313,61.9375 265.6719,61.8594 Q265.8281,61.7813 266.0313,61.7813 Q266.3594,61.7813 266.6094,62.0469 Q266.875,62.2969 266.875,62.6406 Q266.875,62.9844 266.5313,63.3906 Q266.0313,63.9688 265.2344,64.2969 Q264.1563,64.75 262.8594,64.75 Q261.3438,64.75 260.1406,64.125 Q259.1563,63.625 258.4688,62.5625 Q257.7813,61.4844 257.7813,60.2031 L257.7813,59.0469 Q257.7813,57.7188 258.3906,56.5781 Q259.0156,55.4219 260.1094,54.8125 Q261.2031,54.1875 262.4375,54.1875 Q263.1719,54.1875 263.8125,54.3594 Q264.4688,54.5156 265.0156,54.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="69" x="282.75" y="64.7285">StateEvent</text><line style="stroke:#181818;stroke-width:0.5;" x1="160" x2="442" y1="75" y2="75"/><polygon fill="none" points="170,105.9141,174,109.9141,170,113.9141,166,109.9141" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="179" y="115.1426">TIMER_CHANGE_DELAY = 250 ms</text><polygon fill="none" points="170,123.5234,174,127.5234,170,131.5234,166,127.5234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="179" y="132.752">TIMER_CHANGE_DELAY_FAST = 50 ms</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="160" x2="268" y1="91.8047" y2="91.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="268" y="97.0332">Definitions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="334" x2="442" y1="91.8047" y2="91.8047"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="164.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="123" x="179" y="171.9707">currentState : State</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="182.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="153" x="179" y="189.5801">hasStateChanged : bool</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="160" x2="252" y1="148.6328" y2="148.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="252" y="153.8613">Static Variables</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="350" x2="442" y1="148.6328" y2="148.6328"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="221.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="179" y="228.7988">ChangeState() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="239.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="179" y="246.4082">InitStateEvent() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="256.7891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="179" y="264.0176">ShowLedState() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="274.3984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="179" y="281.627">ShowCurrentTime() : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="160" x2="244.5" y1="205.4609" y2="205.4609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="244.5" y="210.6895">Internal Functions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="357.5" x2="442" y1="205.4609" y2="205.4609"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="160" x2="442" y1="288.7031" y2="288.7031"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="300.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="232" x="179" y="307.2363">Stoppuhr_LeereZeitAnzeigen() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="317.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="245" x="179" y="324.8457">Stoppuhr_AktuelleZeitAnzeigen() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="335.2266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="251" x="179" y="342.4551">Stoppuhr_ZwischenzeitAnzeigen() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="352.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="179" y="360.0645">Stoppuhr_EndzeitAnzeigen() : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="160" x2="442" y1="367.1406" y2="367.1406"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="378.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="256" x="179" y="385.6738">Timer_EingerichteteZeitAnzeigen() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="396.0547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="179" y="403.2832">Timer_ZeitErhoehen() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="413.6641"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="179" y="420.8926">Timer_ZeitVerringern() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="431.2734"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="179" y="438.502">Timer_AktuelleZeitAnzeigen() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="448.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="179" y="456.1113">Timer_Pausieren() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="466.4922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="179" y="473.7207">Timer_TimerAbgelaufen() : void</text><ellipse cx="170" cy="508.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="243" x="179" y="512.9395">StateEventTask(void *argument) : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="160" x2="247.5" y1="489.6016" y2="489.6016"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="247.5" y="494.8301">Global Functions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="354.5" x2="442" y1="489.6016" y2="489.6016"/></g><!--MD5=[60d6b92408f98aed8df94d5c6e04aa63]
class State--><g id="elem_State"><rect codeLine="32" fill="#F1F1F1" height="75.2188" id="State" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="153" x="478.5" y="244"/><ellipse cx="534.25" cy="260" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M533.1094,260.7969 L533.1094,263.2969 L537.4375,263.2969 L537.4375,262.375 Q537.4375,261.7656 537.6719,261.5 Q537.9219,261.2344 538.2969,261.2344 Q538.6719,261.2344 538.9063,261.5 Q539.1406,261.7656 539.1406,262.375 L539.1406,265 L531.1406,265 Q530.5156,265 530.25,264.7656 Q530,264.5313 530,264.1406 Q530,263.7656 530.2656,263.5313 Q530.5313,263.2969 531.1406,263.2969 L531.4063,263.2969 L531.4063,256.6406 L531.1406,256.6406 Q530.5156,256.6406 530.25,256.4063 Q530,256.1719 530,255.7813 Q530,255.4063 530.25,255.1719 Q530.5156,254.9375 531.1406,254.9375 L538.7656,254.9375 L538.7656,257.5313 Q538.7656,258.1406 538.5313,258.4063 Q538.3125,258.6563 537.9219,258.6563 Q537.5469,258.6563 537.3125,258.4063 Q537.0781,258.1406 537.0781,257.5313 L537.0781,256.6406 L533.1094,256.6406 L533.1094,259.0938 L534.5938,259.0938 Q534.5938,258.4375 534.7188,258.25 Q534.9844,257.8438 535.4531,257.8438 Q535.8281,257.8438 536.0625,258.1094 Q536.2969,258.3594 536.2969,258.9688 L536.2969,260.9375 Q536.2969,261.4844 536.1719,261.6719 Q535.9063,262.0625 535.4531,262.0625 Q534.9844,262.0625 534.7188,261.6563 Q534.5938,261.4688 534.5938,260.7969 L533.1094,260.7969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="33" x="554.75" y="265.7285">State</text><line style="stroke:#181818;stroke-width:0.5;" x1="479.5" x2="630.5" y1="276" y2="276"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="484.5" y="294.5332">STATE_STOPWATCH</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="484.5" y="312.1426">STATE_TIMER</text></g><!--MD5=[c0aad78264ddd70947ad708086fa83ba]
class Stopwatch--><g id="elem_Stopwatch"><rect codeLine="39" fill="#F1F1F1" height="294.5313" id="Stopwatch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="265" x="23.5" y="702"/><ellipse cx="119.25" cy="718" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M122.0156,713.875 Q122.1719,713.6563 122.3594,713.5469 Q122.5469,713.4375 122.7656,713.4375 Q123.1406,713.4375 123.375,713.7031 Q123.6094,713.9531 123.6094,714.5625 L123.6094,716.0156 Q123.6094,716.625 123.375,716.8906 Q123.1406,717.1563 122.7656,717.1563 Q122.4219,717.1563 122.2188,716.9531 Q122.0156,716.7656 121.9063,716.25 Q121.8594,715.8906 121.6719,715.7031 Q121.3438,715.3281 120.7344,715.1094 Q120.125,714.8906 119.5,714.8906 Q118.7344,714.8906 118.0938,715.2188 Q117.4688,715.5469 116.9688,716.2969 Q116.4844,717.0469 116.4844,718.0781 L116.4844,719.1719 Q116.4844,720.4063 117.375,721.2344 Q118.2656,722.0469 119.8594,722.0469 Q120.7969,722.0469 121.4531,721.7969 Q121.8438,721.6406 122.2656,721.2031 Q122.5313,720.9375 122.6719,720.8594 Q122.8281,720.7813 123.0313,720.7813 Q123.3594,720.7813 123.6094,721.0469 Q123.875,721.2969 123.875,721.6406 Q123.875,721.9844 123.5313,722.3906 Q123.0313,722.9688 122.2344,723.2969 Q121.1563,723.75 119.8594,723.75 Q118.3438,723.75 117.1406,723.125 Q116.1563,722.625 115.4688,721.5625 Q114.7813,720.4844 114.7813,719.2031 L114.7813,718.0469 Q114.7813,716.7188 115.3906,715.5781 Q116.0156,714.4219 117.1094,713.8125 Q118.2031,713.1875 119.4375,713.1875 Q120.1719,713.1875 120.8125,713.3594 Q121.4688,713.5156 122.0156,713.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="139.75" y="723.7285">Stopwatch</text><line style="stroke:#181818;stroke-width:0.5;" x1="24.5" x2="287.5" y1="734" y2="734"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="31.5" y="766.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="167" x="43.5" y="774.1426">isStopwatchRunning : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="31.5" y="784.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="211" x="43.5" y="791.752">isShowingIntermediateTime : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="31.5" y="802.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="165" x="43.5" y="809.3613">currentTime : unsigned int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="31.5" y="819.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="198" x="43.5" y="826.9707">intermediateTime : unsigned int</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="24.5" x2="107" y1="750.8047" y2="750.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="107" y="756.0332">Static Variables</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="205" x2="287.5" y1="750.8047" y2="750.8047"/><ellipse cx="34.5" cy="861.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="43.5" y="866.1895">StopwatchTask(void *argument) : void</text><ellipse cx="34.5" cy="879.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="43.5" y="883.7988">StartStopwatch() : void</text><ellipse cx="34.5" cy="897.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="43.5" y="901.4082">StopStopwatch() : void</text><ellipse cx="34.5" cy="914.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="43.5" y="919.0176">ResetStopwatch() : void</text><ellipse cx="34.5" cy="932.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="191" x="43.5" y="936.627">ShowIntermediateTime() : void</text><ellipse cx="34.5" cy="950.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="43.5" y="954.2363">GetStopwatchTime() : unsigned int</text><ellipse cx="34.5" cy="967.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="43.5" y="971.8457">IsStopwatchRunning() : bool</text><ellipse cx="34.5" cy="985.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="43.5" y="989.4551">IsShowingIntermediateTime() : bool</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="24.5" x2="102.5" y1="842.8516" y2="842.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="102.5" y="848.0801">Global Functions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="209.5" x2="287.5" y1="842.8516" y2="842.8516"/></g><!--MD5=[1b844c90688aafb95cd8c95626c3b83a]
class Timer--><g id="elem_Timer"><rect codeLine="57" fill="#F1F1F1" height="400.1875" id="Timer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="308" x="324" y="649.5"/><ellipse cx="455.75" cy="665.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M458.5156,661.375 Q458.6719,661.1563 458.8594,661.0469 Q459.0469,660.9375 459.2656,660.9375 Q459.6406,660.9375 459.875,661.2031 Q460.1094,661.4531 460.1094,662.0625 L460.1094,663.5156 Q460.1094,664.125 459.875,664.3906 Q459.6406,664.6563 459.2656,664.6563 Q458.9219,664.6563 458.7188,664.4531 Q458.5156,664.2656 458.4063,663.75 Q458.3594,663.3906 458.1719,663.2031 Q457.8438,662.8281 457.2344,662.6094 Q456.625,662.3906 456,662.3906 Q455.2344,662.3906 454.5938,662.7188 Q453.9688,663.0469 453.4688,663.7969 Q452.9844,664.5469 452.9844,665.5781 L452.9844,666.6719 Q452.9844,667.9063 453.875,668.7344 Q454.7656,669.5469 456.3594,669.5469 Q457.2969,669.5469 457.9531,669.2969 Q458.3438,669.1406 458.7656,668.7031 Q459.0313,668.4375 459.1719,668.3594 Q459.3281,668.2813 459.5313,668.2813 Q459.8594,668.2813 460.1094,668.5469 Q460.375,668.7969 460.375,669.1406 Q460.375,669.4844 460.0313,669.8906 Q459.5313,670.4688 458.7344,670.7969 Q457.6563,671.25 456.3594,671.25 Q454.8438,671.25 453.6406,670.625 Q452.6563,670.125 451.9688,669.0625 Q451.2813,667.9844 451.2813,666.7031 L451.2813,665.5469 Q451.2813,664.2188 451.8906,663.0781 Q452.5156,661.9219 453.6094,661.3125 Q454.7031,660.6875 455.9375,660.6875 Q456.6719,660.6875 457.3125,660.8594 Q457.9688,661.0156 458.5156,661.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="36" x="476.25" y="671.2285">Timer</text><line style="stroke:#181818;stroke-width:0.5;" x1="325" x2="631" y1="681.5" y2="681.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="332" y="714.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="344" y="721.6426">isConfiguringTimer : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="332" y="732.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="138" x="344" y="739.252">isTimerRunning : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="332" y="749.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="97" x="344" y="756.8613">isTimeUp : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="332" y="767.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="165" x="344" y="774.4707">currentTime : unsigned int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="332" y="784.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="155" x="344" y="792.0801">timerUpCallback : void(*)</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="325" x2="429" y1="698.3047" y2="698.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="429" y="703.5332">Static Variables</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="527" x2="631" y1="698.3047" y2="698.3047"/><ellipse cx="335" cy="827.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="344" y="831.2988">TimerTask(void *argument) : void</text><ellipse cx="335" cy="844.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="344" y="848.9082">SetTimerUpCallback(void (*callback)()) : void</text><ellipse cx="335" cy="862.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="344" y="866.5176">IncrementTime() : void</text><ellipse cx="335" cy="879.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="344" y="884.127">DecrementTime() : void</text><ellipse cx="335" cy="897.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="344" y="901.7363">StartTimer() : void</text><ellipse cx="335" cy="915.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="344" y="919.3457">PauseTimer() : void</text><ellipse cx="335" cy="932.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="344" y="936.9551">ResumeTimer() : void</text><ellipse cx="335" cy="950.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="344" y="954.5645">ResetTimer() : void</text><ellipse cx="335" cy="967.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="344" y="972.1738">GetTimerTime() : unsigned int</text><ellipse cx="335" cy="985.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="344" y="989.7832">IsConfiguringTimer() : bool</text><ellipse cx="335" cy="1003.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="344" y="1007.3926">IsTimerRunning() : bool</text><ellipse cx="335" cy="1020.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="344" y="1025.002">IsTimerPaused() : bool</text><ellipse cx="335" cy="1038.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="344" y="1042.6113">IsTimeUp() : bool</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="325" x2="424.5" y1="807.9609" y2="807.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="424.5" y="813.1895">Global Functions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="531.5" x2="631" y1="807.9609" y2="807.9609"/></g><!--MD5=[f0a055ccd8bc38ddd8d8ac6549a9e12f]
class Buzzer_Treiber--><g id="elem_Buzzer_Treiber"><rect codeLine="89" fill="#F1F1F1" height="284.9219" id="Buzzer_Treiber" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="318" x="1396" y="1112.5"/><ellipse cx="1502.75" cy="1128.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1505.5156,1124.375 Q1505.6719,1124.1563 1505.8594,1124.0469 Q1506.0469,1123.9375 1506.2656,1123.9375 Q1506.6406,1123.9375 1506.875,1124.2031 Q1507.1094,1124.4531 1507.1094,1125.0625 L1507.1094,1126.5156 Q1507.1094,1127.125 1506.875,1127.3906 Q1506.6406,1127.6563 1506.2656,1127.6563 Q1505.9219,1127.6563 1505.7188,1127.4531 Q1505.5156,1127.2656 1505.4063,1126.75 Q1505.3594,1126.3906 1505.1719,1126.2031 Q1504.8438,1125.8281 1504.2344,1125.6094 Q1503.625,1125.3906 1503,1125.3906 Q1502.2344,1125.3906 1501.5938,1125.7188 Q1500.9688,1126.0469 1500.4688,1126.7969 Q1499.9844,1127.5469 1499.9844,1128.5781 L1499.9844,1129.6719 Q1499.9844,1130.9063 1500.875,1131.7344 Q1501.7656,1132.5469 1503.3594,1132.5469 Q1504.2969,1132.5469 1504.9531,1132.2969 Q1505.3438,1132.1406 1505.7656,1131.7031 Q1506.0313,1131.4375 1506.1719,1131.3594 Q1506.3281,1131.2813 1506.5313,1131.2813 Q1506.8594,1131.2813 1507.1094,1131.5469 Q1507.375,1131.7969 1507.375,1132.1406 Q1507.375,1132.4844 1507.0313,1132.8906 Q1506.5313,1133.4688 1505.7344,1133.7969 Q1504.6563,1134.25 1503.3594,1134.25 Q1501.8438,1134.25 1500.6406,1133.625 Q1499.6563,1133.125 1498.9688,1132.0625 Q1498.2813,1130.9844 1498.2813,1129.7031 L1498.2813,1128.5469 Q1498.2813,1127.2188 1498.8906,1126.0781 Q1499.5156,1124.9219 1500.6094,1124.3125 Q1501.7031,1123.6875 1502.9375,1123.6875 Q1503.6719,1123.6875 1504.3125,1123.8594 Q1504.9688,1124.0156 1505.5156,1124.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="1523.25" y="1134.2285">Buzzer_Treiber</text><line style="stroke:#181818;stroke-width:0.5;" x1="1397" x2="1713" y1="1144.5" y2="1144.5"/><polygon fill="none" points="1407,1175.4141,1411,1179.4141,1407,1183.4141,1403,1179.4141" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="217" x="1416" y="1184.6426">SEMAPHORE_TIMEOUT = 100 ms</text><polygon fill="none" points="1407,1193.0234,1411,1197.0234,1407,1201.0234,1403,1197.0234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="231" x="1416" y="1202.252">DEFAULT_BUZZER_DELAY = 10 ms</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1397" x2="1522" y1="1161.3047" y2="1161.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="1522" y="1166.5332">Definitions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1588" x2="1713" y1="1161.3047" y2="1161.3047"/><ellipse cx="1407" cy="1237.2422" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="1416" y="1241.4707">buzzerSemaphoreHandleId : osSemaphoreId_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1404" y="1251.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="94" x="1416" y="1259.0801">buzzUntil : long</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1404" y="1269.4609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="110" x="1416" y="1276.6895">isBuzzerOn : bool</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1397" x2="1506" y1="1218.1328" y2="1218.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="1506" y="1223.3613">Static Variables</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1604" x2="1713" y1="1218.1328" y2="1218.1328"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1404" y="1308.6797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="1416" y="1315.9082">SetBuzzer(bool state) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1404" y="1326.2891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="1416" y="1333.5176">IsBuzzTimeReached() : bool</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1397" x2="1498.5" y1="1292.5703" y2="1292.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="1498.5" y="1297.7988">Internal Functions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1611.5" x2="1713" y1="1292.5703" y2="1292.5703"/><ellipse cx="1407" cy="1368.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216" x="1416" y="1372.7363">BuzzerTask(void *argument) : void</text><ellipse cx="1407" cy="1386.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="1416" y="1390.3457">BuzzerBeep(int length) : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1397" x2="1501.5" y1="1349.3984" y2="1349.3984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="1501.5" y="1354.627">Global Functions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1608.5" x2="1713" y1="1349.3984" y2="1349.3984"/></g><path d="M1171.5,1228.5 L1171.5,1271.2031 A0,0 0 0 0 1171.5,1271.2031 L1360.5,1271.2031 A0,0 0 0 0 1360.5,1271.2031 L1360.5,1253.8516 L1400,1310.1797 L1360.5,1245.8516 L1360.5,1238.5 L1350.5,1228.5 L1171.5,1228.5 A0,0 0 0 0 1171.5,1228.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1350.5,1228.5 L1350.5,1238.5 L1360.5,1238.5 L1350.5,1228.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="164" x="1177.5" y="1246.9951">Writes to the buzzer pin and</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="154" x="1177.5" y="1263.3467">use the buzzer semaphore</text><!--MD5=[a83a09feacc67daa98e9f8ee796abd28]
class SEG_Driver--><g id="elem_SEG_Driver"><rect codeLine="110" fill="#F1F1F1" height="32" id="SEG_Driver" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="106" x="2148" y="1239"/><ellipse cx="2163" cy="1255" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2165.1875,1256.7656 L2161.0469,1256.7656 L2160.625,1257.7969 L2161.0469,1257.7969 Q2161.6563,1257.7969 2161.9219,1258.0313 Q2162.1875,1258.2656 2162.1875,1258.6563 Q2162.1875,1259.0313 2161.9219,1259.2656 Q2161.6563,1259.5 2161.0469,1259.5 L2158.75,1259.5 Q2158.1406,1259.5 2157.8906,1259.2656 Q2157.625,1259.0313 2157.625,1258.6406 Q2157.625,1258.2656 2157.9063,1258.0313 Q2158.1719,1257.7813 2158.7969,1257.7969 L2161.4688,1251.1406 L2160.3594,1251.1406 Q2159.75,1251.1406 2159.4844,1250.9063 Q2159.2188,1250.6719 2159.2188,1250.2813 Q2159.2188,1249.9063 2159.4844,1249.6719 Q2159.75,1249.4375 2160.3594,1249.4375 L2164.0313,1249.4375 L2167.4219,1257.7969 Q2168.0156,1257.7969 2168.2031,1257.9375 Q2168.5938,1258.2031 2168.5938,1258.6563 Q2168.5938,1259.0313 2168.3281,1259.2656 Q2168.0781,1259.5 2167.4688,1259.5 L2165.1719,1259.5 Q2164.5625,1259.5 2164.2969,1259.2656 Q2164.0313,1259.0313 2164.0313,1258.6406 Q2164.0313,1258.2656 2164.2969,1258.0313 Q2164.5625,1257.7969 2165.1719,1257.7969 L2165.5938,1257.7969 L2165.1875,1256.7656 Z M2164.4688,1255.0625 L2163.1094,1251.6875 L2161.7344,1255.0625 L2164.4688,1255.0625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="74" x="2177" y="1260.7285">SEG_Driver</text></g><g id="elem_GMN15"><path d="M2289.5,1233.5 L2289.5,1251 L2254.12,1255 L2289.5,1259 L2289.5,1276.2031 A0,0 0 0 0 2289.5,1276.2031 L2602.5,1276.2031 A0,0 0 0 0 2602.5,1276.2031 L2602.5,1243.5 L2592.5,1233.5 L2289.5,1233.5 A0,0 0 0 0 2289.5,1233.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M2592.5,1233.5 L2592.5,1243.5 L2602.5,1243.5 L2592.5,1233.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="171" x="2295.5" y="1251.9951">File for the 7-segment display</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="292" x="2295.5" y="1268.3467">Not to be used directly but only by Display_Treiber</text></g><!--MD5=[9b62a42031254a83372285e9581ed046]
class Display_Treiber--><g id="elem_Display_Treiber"><rect codeLine="116" fill="#F1F1F1" height="228.0938" id="Display_Treiber" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="518" x="1942" y="735.5"/><ellipse cx="2084.25" cy="751.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2087.0156,747.375 Q2087.1719,747.1563 2087.3594,747.0469 Q2087.5469,746.9375 2087.7656,746.9375 Q2088.1406,746.9375 2088.375,747.2031 Q2088.6094,747.4531 2088.6094,748.0625 L2088.6094,749.5156 Q2088.6094,750.125 2088.375,750.3906 Q2088.1406,750.6563 2087.7656,750.6563 Q2087.4219,750.6563 2087.2188,750.4531 Q2087.0156,750.2656 2086.9063,749.75 Q2086.8594,749.3906 2086.6719,749.2031 Q2086.3438,748.8281 2085.7344,748.6094 Q2085.125,748.3906 2084.5,748.3906 Q2083.7344,748.3906 2083.0938,748.7188 Q2082.4688,749.0469 2081.9688,749.7969 Q2081.4844,750.5469 2081.4844,751.5781 L2081.4844,752.6719 Q2081.4844,753.9063 2082.375,754.7344 Q2083.2656,755.5469 2084.8594,755.5469 Q2085.7969,755.5469 2086.4531,755.2969 Q2086.8438,755.1406 2087.2656,754.7031 Q2087.5313,754.4375 2087.6719,754.3594 Q2087.8281,754.2813 2088.0313,754.2813 Q2088.3594,754.2813 2088.6094,754.5469 Q2088.875,754.7969 2088.875,755.1406 Q2088.875,755.4844 2088.5313,755.8906 Q2088.0313,756.4688 2087.2344,756.7969 Q2086.1563,757.25 2084.8594,757.25 Q2083.3438,757.25 2082.1406,756.625 Q2081.1563,756.125 2080.4688,755.0625 Q2079.7813,753.9844 2079.7813,752.7031 L2079.7813,751.5469 Q2079.7813,750.2188 2080.3906,749.0781 Q2081.0156,747.9219 2082.1094,747.3125 Q2083.2031,746.6875 2084.4375,746.6875 Q2085.1719,746.6875 2085.8125,746.8594 Q2086.4688,747.0156 2087.0156,747.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="2104.75" y="757.2285">Display_Treiber</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="123" x="2340" y="732.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="121" x="2341" y="745.957">? extends SEG_Driver</text><line style="stroke:#181818;stroke-width:0.5;" x1="1943" x2="2459" y1="767.5" y2="767.5"/><polygon fill="none" points="1953,798.4141,1957,802.4141,1953,806.4141,1949,802.4141" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="492" x="1962" y="807.6426">FORMAT_DECIMAL_POINT_M_S_F = SEG_Driver_DP_2 | SEG_Driver_DP_4</text><polygon fill="none" points="1953,816.0234,1957,820.0234,1953,824.0234,1949,820.0234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="346" x="1962" y="825.252">FORMAT_DECIMAL_POINT_M_S = SEG_Driver_DP_3</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1943" x2="2168" y1="784.3047" y2="784.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="2168" y="789.5332">Definitions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="2234" x2="2459" y1="784.3047" y2="784.3047"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1950" y="857.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="413" x="1962" y="864.4707">ConvertTimeToDisplay(unsinged int tenths, int *decimalPoint) : int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1950" y="874.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="380" x="1962" y="882.0801">WriteTimeToDisplay(unsigned int time, int flashSpeed) : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1943" x2="2144.5" y1="841.1328" y2="841.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="2144.5" y="846.3613">Internal Functions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="2257.5" x2="2459" y1="841.1328" y2="841.1328"/><ellipse cx="1953" cy="917.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="265" x="1962" y="921.2988">DisplayUpdateTask(void *argument) : void</text><ellipse cx="1953" cy="934.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="232" x="1962" y="938.9082">DisplayTime(unsigned int time) : void</text><ellipse cx="1953" cy="952.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="472" x="1962" y="956.5176">DisplayFlashTime(unsigned int time, DisplayFlashSpeed flashSpeed) : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1943" x2="2147.5" y1="897.9609" y2="897.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="2147.5" y="903.1895">Global Functions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="2254.5" x2="2459" y1="897.9609" y2="897.9609"/></g><!--MD5=[36fe5bad8306fd460ab3f4cc8dec760d]
class DisplayFlashSpeed--><g id="elem_DisplayFlashSpeed"><rect codeLine="129" fill="#F1F1F1" height="92.8281" id="DisplayFlashSpeed" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="154" x="2495" y="803"/><ellipse cx="2510" cy="819" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2508.8594,819.7969 L2508.8594,822.2969 L2513.1875,822.2969 L2513.1875,821.375 Q2513.1875,820.7656 2513.4219,820.5 Q2513.6719,820.2344 2514.0469,820.2344 Q2514.4219,820.2344 2514.6563,820.5 Q2514.8906,820.7656 2514.8906,821.375 L2514.8906,824 L2506.8906,824 Q2506.2656,824 2506,823.7656 Q2505.75,823.5313 2505.75,823.1406 Q2505.75,822.7656 2506.0156,822.5313 Q2506.2813,822.2969 2506.8906,822.2969 L2507.1563,822.2969 L2507.1563,815.6406 L2506.8906,815.6406 Q2506.2656,815.6406 2506,815.4063 Q2505.75,815.1719 2505.75,814.7813 Q2505.75,814.4063 2506,814.1719 Q2506.2656,813.9375 2506.8906,813.9375 L2514.5156,813.9375 L2514.5156,816.5313 Q2514.5156,817.1406 2514.2813,817.4063 Q2514.0625,817.6563 2513.6719,817.6563 Q2513.2969,817.6563 2513.0625,817.4063 Q2512.8281,817.1406 2512.8281,816.5313 L2512.8281,815.6406 L2508.8594,815.6406 L2508.8594,818.0938 L2510.3438,818.0938 Q2510.3438,817.4375 2510.4688,817.25 Q2510.7344,816.8438 2511.2031,816.8438 Q2511.5781,816.8438 2511.8125,817.1094 Q2512.0469,817.3594 2512.0469,817.9688 L2512.0469,819.9375 Q2512.0469,820.4844 2511.9219,820.6719 Q2511.6563,821.0625 2511.2031,821.0625 Q2510.7344,821.0625 2510.4688,820.6563 Q2510.3438,820.4688 2510.3438,819.7969 L2508.8594,819.7969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="2524" y="824.7285">DisplayFlashSpeed</text><line style="stroke:#181818;stroke-width:0.5;" x1="2496" x2="2648" y1="835" y2="835"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="29" x="2501" y="853.5332">OFF</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="2501" y="871.1426">SLOW</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="36" x="2501" y="888.752">FAST</text></g><!--MD5=[462b543007facded5e1d6de4adef20d0]
class LED_Treiber--><g id="elem_LED_Treiber"><rect codeLine="138" fill="#F1F1F1" height="175.2656" id="LED_Treiber" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="296" x="736" y="1167.5"/><ellipse cx="839.25" cy="1183.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M842.0156,1179.375 Q842.1719,1179.1563 842.3594,1179.0469 Q842.5469,1178.9375 842.7656,1178.9375 Q843.1406,1178.9375 843.375,1179.2031 Q843.6094,1179.4531 843.6094,1180.0625 L843.6094,1181.5156 Q843.6094,1182.125 843.375,1182.3906 Q843.1406,1182.6563 842.7656,1182.6563 Q842.4219,1182.6563 842.2188,1182.4531 Q842.0156,1182.2656 841.9063,1181.75 Q841.8594,1181.3906 841.6719,1181.2031 Q841.3438,1180.8281 840.7344,1180.6094 Q840.125,1180.3906 839.5,1180.3906 Q838.7344,1180.3906 838.0938,1180.7188 Q837.4688,1181.0469 836.9688,1181.7969 Q836.4844,1182.5469 836.4844,1183.5781 L836.4844,1184.6719 Q836.4844,1185.9063 837.375,1186.7344 Q838.2656,1187.5469 839.8594,1187.5469 Q840.7969,1187.5469 841.4531,1187.2969 Q841.8438,1187.1406 842.2656,1186.7031 Q842.5313,1186.4375 842.6719,1186.3594 Q842.8281,1186.2813 843.0313,1186.2813 Q843.3594,1186.2813 843.6094,1186.5469 Q843.875,1186.7969 843.875,1187.1406 Q843.875,1187.4844 843.5313,1187.8906 Q843.0313,1188.4688 842.2344,1188.7969 Q841.1563,1189.25 839.8594,1189.25 Q838.3438,1189.25 837.1406,1188.625 Q836.1563,1188.125 835.4688,1187.0625 Q834.7813,1185.9844 834.7813,1184.7031 L834.7813,1183.5469 Q834.7813,1182.2188 835.3906,1181.0781 Q836.0156,1179.9219 837.1094,1179.3125 Q838.2031,1178.6875 839.4375,1178.6875 Q840.1719,1178.6875 840.8125,1178.8594 Q841.4688,1179.0156 842.0156,1179.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="859.75" y="1189.2285">LED_Treiber</text><line style="stroke:#181818;stroke-width:0.5;" x1="737" x2="1031" y1="1199.5" y2="1199.5"/><polygon fill="none" points="747,1230.4141,751,1234.4141,747,1238.4141,743,1234.4141" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="217" x="756" y="1239.6426">SEMAPHORE_TIMEOUT = 100 ms</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="737" x2="851" y1="1216.3047" y2="1216.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="851" y="1221.5332">Definitions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="917" x2="1031" y1="1216.3047" y2="1216.3047"/><ellipse cx="747" cy="1274.6328" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="270" x="756" y="1278.8613">ledSemaphoreHandleId : osSemaphoreId_t</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="737" x2="835" y1="1255.5234" y2="1255.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="835" y="1260.752">Static Variables</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="933" x2="1031" y1="1255.5234" y2="1255.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="742" y="1318.0801">LED_Toggle(Led led) : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="742" y="1335.6895">LED_Set(Led led, bool state) : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="737" x2="833.5" y1="1294.7422" y2="1294.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="833.5" y="1299.9707">Static Functions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="934.5" x2="1031" y1="1294.7422" y2="1294.7422"/></g><g id="elem_GMN23"><path d="M723,828 L723,870.7031 A0,0 0 0 0 723,870.7031 L880,870.7031 L884,1167.21 L888,870.7031 L1045,870.7031 A0,0 0 0 0 1045,870.7031 L1045,838 L1035,828 L723,828 A0,0 0 0 0 723,828 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1035,828 L1035,838 L1045,838 L1035,828 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="301" x="729" y="846.4951">LED_Toggle and LED_Set write to the LED pins and</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="140" x="729" y="862.8467">use the LED semaphore</text></g><!--MD5=[955689219986f065b26ea4c852f73b02]
class Led--><g id="elem_Led"><rect codeLine="152" fill="#F1F1F1" height="110.4375" id="Led" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="56" x="1067" y="1200"/><ellipse cx="1082" cy="1216" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1080.8594,1216.7969 L1080.8594,1219.2969 L1085.1875,1219.2969 L1085.1875,1218.375 Q1085.1875,1217.7656 1085.4219,1217.5 Q1085.6719,1217.2344 1086.0469,1217.2344 Q1086.4219,1217.2344 1086.6563,1217.5 Q1086.8906,1217.7656 1086.8906,1218.375 L1086.8906,1221 L1078.8906,1221 Q1078.2656,1221 1078,1220.7656 Q1077.75,1220.5313 1077.75,1220.1406 Q1077.75,1219.7656 1078.0156,1219.5313 Q1078.2813,1219.2969 1078.8906,1219.2969 L1079.1563,1219.2969 L1079.1563,1212.6406 L1078.8906,1212.6406 Q1078.2656,1212.6406 1078,1212.4063 Q1077.75,1212.1719 1077.75,1211.7813 Q1077.75,1211.4063 1078,1211.1719 Q1078.2656,1210.9375 1078.8906,1210.9375 L1086.5156,1210.9375 L1086.5156,1213.5313 Q1086.5156,1214.1406 1086.2813,1214.4063 Q1086.0625,1214.6563 1085.6719,1214.6563 Q1085.2969,1214.6563 1085.0625,1214.4063 Q1084.8281,1214.1406 1084.8281,1213.5313 L1084.8281,1212.6406 L1080.8594,1212.6406 L1080.8594,1215.0938 L1082.3438,1215.0938 Q1082.3438,1214.4375 1082.4688,1214.25 Q1082.7344,1213.8438 1083.2031,1213.8438 Q1083.5781,1213.8438 1083.8125,1214.1094 Q1084.0469,1214.3594 1084.0469,1214.9688 L1084.0469,1216.9375 Q1084.0469,1217.4844 1083.9219,1217.6719 Q1083.6563,1218.0625 1083.2031,1218.0625 Q1082.7344,1218.0625 1082.4688,1217.6563 Q1082.3438,1217.4688 1082.3438,1216.7969 L1080.8594,1216.7969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="24" x="1096" y="1221.7285">Led</text><line style="stroke:#181818;stroke-width:0.5;" x1="1068" x2="1122" y1="1232" y2="1232"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="35" x="1073" y="1250.5332">LED1</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="35" x="1073" y="1268.1426">LED2</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="35" x="1073" y="1285.752">LED3</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="35" x="1073" y="1303.3613">LED4</text></g><!--MD5=[6b4b55f4fa27e336eb72572bc06d6f60]
class Taster_Treiber--><g id="elem_Taster_Treiber"><rect codeLine="161" fill="#F1F1F1" height="390.5781" id="Taster_Treiber" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="467" x="1321.5" y="654"/><ellipse cx="1503.25" cy="670" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1506.0156,665.875 Q1506.1719,665.6563 1506.3594,665.5469 Q1506.5469,665.4375 1506.7656,665.4375 Q1507.1406,665.4375 1507.375,665.7031 Q1507.6094,665.9531 1507.6094,666.5625 L1507.6094,668.0156 Q1507.6094,668.625 1507.375,668.8906 Q1507.1406,669.1563 1506.7656,669.1563 Q1506.4219,669.1563 1506.2188,668.9531 Q1506.0156,668.7656 1505.9063,668.25 Q1505.8594,667.8906 1505.6719,667.7031 Q1505.3438,667.3281 1504.7344,667.1094 Q1504.125,666.8906 1503.5,666.8906 Q1502.7344,666.8906 1502.0938,667.2188 Q1501.4688,667.5469 1500.9688,668.2969 Q1500.4844,669.0469 1500.4844,670.0781 L1500.4844,671.1719 Q1500.4844,672.4063 1501.375,673.2344 Q1502.2656,674.0469 1503.8594,674.0469 Q1504.7969,674.0469 1505.4531,673.7969 Q1505.8438,673.6406 1506.2656,673.2031 Q1506.5313,672.9375 1506.6719,672.8594 Q1506.8281,672.7813 1507.0313,672.7813 Q1507.3594,672.7813 1507.6094,673.0469 Q1507.875,673.2969 1507.875,673.6406 Q1507.875,673.9844 1507.5313,674.3906 Q1507.0313,674.9688 1506.2344,675.2969 Q1505.1563,675.75 1503.8594,675.75 Q1502.3438,675.75 1501.1406,675.125 Q1500.1563,674.625 1499.4688,673.5625 Q1498.7813,672.4844 1498.7813,671.2031 L1498.7813,670.0469 Q1498.7813,668.7188 1499.3906,667.5781 Q1500.0156,666.4219 1501.1094,665.8125 Q1502.2031,665.1875 1503.4375,665.1875 Q1504.1719,665.1875 1504.8125,665.3594 Q1505.4688,665.5156 1506.0156,665.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="1523.75" y="675.7285">Taster_Treiber</text><line style="stroke:#181818;stroke-width:0.5;" x1="1322.5" x2="1787.5" y1="686" y2="686"/><polygon fill="none" points="1332.5,716.9141,1336.5,720.9141,1332.5,724.9141,1328.5,720.9141" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="1341.5" y="726.1426">AMOUNT_OF_TASTERS = 3</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1322.5" x2="1522" y1="702.8047" y2="702.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="1522" y="708.0332">Definitions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1588" x2="1787.5" y1="702.8047" y2="702.8047"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1329.5" y="758.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="322" x="1341.5" y="765.3613">TASTER_STATUS : bool[AMOUNT_OF_TASTERS]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1329.5" y="775.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="370" x="1341.5" y="782.9707">TASTER_HAS_CHANGED : bool[AMOUNT_OF_TASTERS]</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1329.5" y="793.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="354" x="1341.5" y="800.5801">TASTER_CALLBACK : void(*)[AMOUNT_OF_TASTERS]</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1329.5" y="810.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="401" x="1341.5" y="818.1895">TASTER_LONG_CALLBACK : void(*)[AMOUNT_OF_TASTERS]</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1322.5" x2="1506" y1="742.0234" y2="742.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="1506" y="747.252">Static Variables</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1604" x2="1787.5" y1="742.0234" y2="742.0234"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1329.5" y="850.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="1341.5" y="857.4082">Update_Taster(Taster taster) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1329.5" y="867.7891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="208" x="1341.5" y="875.0176">HasCallback(Taster taster) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1329.5" y="885.3984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240" x="1341.5" y="892.627">HasLongCallback(Taster taster) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1329.5" y="903.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="208" x="1341.5" y="910.2363">IsLongPress(Taster taster) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1329.5" y="920.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="229" x="1341.5" y="927.8457">TriggerCallback(Taster taster) : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1322.5" x2="1504.5" y1="834.0703" y2="834.0703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="1504.5" y="839.2988">Static Functions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1605.5" x2="1787.5" y1="834.0703" y2="834.0703"/><ellipse cx="1332.5" cy="962.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="1341.5" y="967.0645">TasterTask(void *argument) : void</text><ellipse cx="1332.5" cy="980.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="401" x="1341.5" y="984.6738">Set_Taster_Callback(Taster taster, void (*callback)(void)) : void</text><ellipse cx="1332.5" cy="998.0547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="441" x="1341.5" y="1002.2832">Set_Taster_Long_Callback(Taster taster, void (*callback)(void)) : void</text><ellipse cx="1332.5" cy="1015.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="1341.5" y="1019.8926">Taster_Pressed(Taster taster) : void</text><ellipse cx="1332.5" cy="1033.2734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="1341.5" y="1037.502">Taster_Get(Taster taster) : bool</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1322.5" x2="1501.5" y1="943.7266" y2="943.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="1501.5" y="948.9551">Global Functions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1608.5" x2="1787.5" y1="943.7266" y2="943.7266"/></g><path d="M1080,762.5 L1080,805.2031 A0,0 0 0 0 1080,805.2031 L1247,805.2031 A0,0 0 0 0 1247,805.2031 L1247,787.8516 L1325.5,851.6797 L1247,779.8516 L1247,772.5 L1237,762.5 L1080,762.5 A0,0 0 0 0 1080,762.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1237,762.5 L1237,772.5 L1247,772.5 L1237,762.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="142" x="1086" y="780.9951">Reads the taster pin and</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="124" x="1086" y="797.3467">sets the taster status</text><path d="M1080,815.2031 L1080,890.6094 A0,0 0 0 0 1080,890.6094 L1270,890.6094 A0,0 0 0 0 1270,890.6094 L1270,856.9063 L1325.5,961.3359 L1270,848.9063 L1270,825.2031 L1260,815.2031 L1080,815.2031 A0,0 0 0 0 1080,815.2031 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1260,815.2031 L1260,825.2031 L1270,825.2031 L1260,815.2031 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="152" x="1086" y="833.6982">Triggers the callbacks and</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="138" x="1086" y="850.0498">checks for long presses</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="169" x="1086" y="866.4014">When a callback is triggered,</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="121" x="1086" y="882.7529">the buzzer is beeped</text><path d="M1080,900.6094 L1080,926.9609 A0,0 0 0 0 1080,926.9609 L1286,926.9609 A0,0 0 0 0 1286,926.9609 L1286,918.6094 L1325.5,1014.1641 L1286,910.6094 L1286,910.6094 L1276,900.6094 L1080,900.6094 A0,0 0 0 0 1080,900.6094 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1276,900.6094 L1276,910.6094 L1286,910.6094 L1276,900.6094 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="185" x="1086" y="919.1045">Is called by the interrupt handler</text><!--MD5=[10ff10bbd1d87299265a61d80bb149dd]
class Taster--><g id="elem_Taster"><rect codeLine="196" fill="#F1F1F1" height="92.8281" id="Taster" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="83" x="1823.5" y="803"/><ellipse cx="1843" cy="819" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1841.8594,819.7969 L1841.8594,822.2969 L1846.1875,822.2969 L1846.1875,821.375 Q1846.1875,820.7656 1846.4219,820.5 Q1846.6719,820.2344 1847.0469,820.2344 Q1847.4219,820.2344 1847.6563,820.5 Q1847.8906,820.7656 1847.8906,821.375 L1847.8906,824 L1839.8906,824 Q1839.2656,824 1839,823.7656 Q1838.75,823.5313 1838.75,823.1406 Q1838.75,822.7656 1839.0156,822.5313 Q1839.2813,822.2969 1839.8906,822.2969 L1840.1563,822.2969 L1840.1563,815.6406 L1839.8906,815.6406 Q1839.2656,815.6406 1839,815.4063 Q1838.75,815.1719 1838.75,814.7813 Q1838.75,814.4063 1839,814.1719 Q1839.2656,813.9375 1839.8906,813.9375 L1847.5156,813.9375 L1847.5156,816.5313 Q1847.5156,817.1406 1847.2813,817.4063 Q1847.0625,817.6563 1846.6719,817.6563 Q1846.2969,817.6563 1846.0625,817.4063 Q1845.8281,817.1406 1845.8281,816.5313 L1845.8281,815.6406 L1841.8594,815.6406 L1841.8594,818.0938 L1843.3438,818.0938 Q1843.3438,817.4375 1843.4688,817.25 Q1843.7344,816.8438 1844.2031,816.8438 Q1844.5781,816.8438 1844.8125,817.1094 Q1845.0469,817.3594 1845.0469,817.9688 L1845.0469,819.9375 Q1845.0469,820.4844 1844.9219,820.6719 Q1844.6563,821.0625 1844.2031,821.0625 Q1843.7344,821.0625 1843.4688,820.6563 Q1843.3438,820.4688 1843.3438,819.7969 L1841.8594,819.7969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="1858" y="824.7285">Taster</text><line style="stroke:#181818;stroke-width:0.5;" x1="1824.5" x2="1905.5" y1="835" y2="835"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="1829.5" y="853.5332">TASTER_1</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="1829.5" y="871.1426">TASTER_2</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="1829.5" y="888.752">TASTER_3</text></g><!--MD5=[3eaf59e48516a15b49d4156ecb9e2982]
link StateEvent to State--><g id="link_StateEvent_State"><path codeLine="37" d="M443.38,281.5 C453.28,281.5 463.18,281.5 473.08,281.5 " fill="none" id="StateEvent-to-State" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="478.26,281.5,469.26,277.5,473.26,281.5,469.26,285.5,478.26,281.5" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4a0205ac9506e2924b7344e956d9bee4]
link StateEvent to Timer--><g id="link_StateEvent_Timer"><path codeLine="82" d="M375.29,520.07 C388.2,561.36 401.53,603.96 414.13,644.25 " fill="none" id="StateEvent-to-Timer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="415.66,649.15,416.8035,639.3677,414.1735,644.3761,409.1652,641.7461,415.66,649.15" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4bd291457e2cb8cdd78cc29f125a51d2]
link StateEvent to Stopwatch--><g id="link_StateEvent_Stopwatch"><path codeLine="83" d="M240.14,520.07 C224.79,579.98 208.73,642.68 194.8,697.04 " fill="none" id="StateEvent-to-Stopwatch" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="193.55,701.94,199.6617,694.2168,194.7929,697.0969,191.9128,692.2282,193.55,701.94" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e6270b04d978fac7771439398de46f51]
link Display_Treiber to SEG_Driver--><g id="link_Display_Treiber_SEG_Driver"><path codeLine="135" d="M2201,963.7 C2201,1053.39 2201,1172.2 2201,1225.73 " fill="none" id="Display_Treiber-to-SEG_Driver" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2201,1238.73,2205,1232.73,2201,1226.73,2197,1232.73,2201,1238.73" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4fe1c3afc026d5c72f57e00fb9744c4f]
link Display_Treiber to DisplayFlashSpeed--><g id="link_Display_Treiber_DisplayFlashSpeed"><path codeLine="136" d="M2460.05,849.5 C2469.85,849.5 2479.66,849.5 2489.47,849.5 " fill="none" id="Display_Treiber-to-DisplayFlashSpeed" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2494.6,849.5,2485.6,845.5,2489.6,849.5,2485.6,853.5,2494.6,849.5" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[8ec27cb07ff43039548eed8c75596287]
link LED_Treiber to Led--><g id="link_LED_Treiber_Led"><path codeLine="159" d="M1032.36,1255 C1042.08,1255 1051.81,1255 1061.53,1255 " fill="none" id="LED_Treiber-to-Led" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1066.62,1255,1057.62,1251,1061.62,1255,1057.62,1259,1066.62,1255" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fee58baa2a391596c918e62e59e1dc03]
link Taster_Treiber to Taster--><g id="link_Taster_Treiber_Taster"><path codeLine="202" d="M1788.71,849.5 C1798.52,849.5 1808.34,849.5 1818.15,849.5 " fill="none" id="Taster_Treiber-to-Taster" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1823.28,849.5,1814.28,845.5,1818.28,849.5,1814.28,853.5,1823.28,849.5" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[8060e0a240164b0d6b3e55d33cb9645d]
link Taster_Treiber to Buzzer_Treiber--><g id="link_Taster_Treiber_Buzzer_Treiber"><path codeLine="203" d="M1555,1045.16 C1555,1066.06 1555,1087.06 1555,1107.27 " fill="none" id="Taster_Treiber-to-Buzzer_Treiber" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1555,1112.39,1559,1103.39,1555,1107.39,1551,1103.39,1555,1112.39" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fc6da8cd9b81ce3a05a929d32898624e]
link StateEvent to Drivers--><g id="link_StateEvent_Drivers"><path codeLine="205" d="M443.14,504.45 C448.94,509.89 454.9,515.09 461,520 C530.65,576.02 592.15,524.22 648,594 C656.8038,605 664.0466,617.1463 669.9793,629.9901 C672.9456,636.4121 675.5845,643.0084 677.9271,649.7231 C678.5128,651.4017 679.08,653.0878 679.6291,654.7804 " fill="none" id="StateEvent-to-Drivers" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="679.6291,654.7804,680.6564,644.9852,678.0861,650.0244,673.0469,647.454,679.6291,654.7804" style="stroke:#181818;stroke-width:1.0;"/><path d="M642,555 L642,581 L841,581 L841,565 L831,555 L642,555 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M831,555 L831,565 L841,565 L831,555 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="178" x="648" y="573.4951">The StateEvent uses all drivers</text></g><!--MD5=[d43ef78bee80dfa1751235bbb2561742]
@startuml "M242 - Class Diagram"
hide empty members

package StateEventFiles <<Rectangle>> {
    class StateEvent
    {
        .. Definitions ..
        # TIMER_CHANGE_DELAY = 250 ms
        # TIMER_CHANGE_DELAY_FAST = 50 ms
        .. Static Variables ..
        - {static} currentState : State
        - {static} hasStateChanged : bool
        .. Internal Functions ..
        - ChangeState() : void
        - InitStateEvent() : void
        - ShowLedState() : void
        - ShowCurrentTime() : void
        ..
        - Stoppuhr_LeereZeitAnzeigen() : void
        - Stoppuhr_AktuelleZeitAnzeigen() : void
        - Stoppuhr_ZwischenzeitAnzeigen() : void
        - Stoppuhr_EndzeitAnzeigen() : void
        ..
        - Timer_EingerichteteZeitAnzeigen() : void
        - Timer_ZeitErhoehen() : void
        - Timer_ZeitVerringern() : void
        - Timer_AktuelleZeitAnzeigen() : void
        - Timer_Pausieren() : void
        - Timer_TimerAbgelaufen() : void
        .. Global Functions ..
        + StateEventTask(void *argument) : void
    }
    enum State
    {
        STATE_STOPWATCH
        STATE_TIMER
    }
    StateEvent -> State

    class Stopwatch
    {
        .. Static Variables ..
        - {static} isStopwatchRunning : bool
        - {static} isShowingIntermediateTime : bool
        - {static} currentTime : unsigned int
        - {static} intermediateTime : unsigned int
        .. Global Functions ..
        + StopwatchTask(void *argument) : void
        + StartStopwatch() : void
        + StopStopwatch() : void
        + ResetStopwatch() : void
        + ShowIntermediateTime() : void
        + GetStopwatchTime() : unsigned int
        + IsStopwatchRunning() : bool
        + IsShowingIntermediateTime() : bool
    }

    class Timer
    {
        .. Static Variables ..
        - {static} isConfiguringTimer : bool
        - {static} isTimerRunning : bool
        - {static} isTimeUp : bool
        - {static} currentTime : unsigned int
        - {static} timerUpCallback : void(*)
        .. Global Functions ..
        + TimerTask(void *argument) : void
        + SetTimerUpCallback(void (*callback)()) : void
        + IncrementTime() : void
        + DecrementTime() : void
        + StartTimer() : void
        + PauseTimer() : void
        + ResumeTimer() : void
        + ResetTimer() : void
        + GetTimerTime() : unsigned int
        + IsConfiguringTimer() : bool
        + IsTimerRunning() : bool
        + IsTimerPaused() : bool
        + IsTimeUp() : bool
    }

    ' Includes
    StateEvent - -> Timer
    StateEvent - -> Stopwatch

}

package Drivers <<Rectangle>>
{
    class Buzzer_Treiber
    {
        .. Definitions ..
        # SEMAPHORE_TIMEOUT = 100 ms
        # DEFAULT_BUZZER_DELAY = 10 ms
        .. Static Variables ..
        + buzzerSemaphoreHandleId : osSemaphoreId_t
        - {static} buzzUntil : long
        - {static} isBuzzerOn : bool
        .. Internal Functions ..
        - SetBuzzer(bool state) : void
        - IsBuzzTimeReached() : bool
        .. Global Functions ..
        + BuzzerTask(void *argument) : void
        + BuzzerBeep(int length) : void
    }
    note left of Buzzer_Treiber::SetBuzzer
      Writes to the buzzer pin and 
      use the buzzer semaphore
    end note

    abstract SEG_Driver {}
    note right of SEG_Driver
        File for the 7-segment display
        Not to be used directly but only by Display_Treiber
    end note

    class Display_Treiber <? extends SEG_Driver> 
    {
        .. Definitions ..
        # FORMAT_DECIMAL_POINT_M_S_F = SEG_Driver_DP_2 | SEG_Driver_DP_4
        # FORMAT_DECIMAL_POINT_M_S = SEG_Driver_DP_3
        .. Internal Functions ..
        - ConvertTimeToDisplay(unsinged int tenths, int *decimalPoint) : int
        - WriteTimeToDisplay(unsigned int time, int flashSpeed) : void
        .. Global Functions ..
        + DisplayUpdateTask(void *argument) : void
        + DisplayTime(unsigned int time) : void
        + DisplayFlashTime(unsigned int time, DisplayFlashSpeed flashSpeed) : void
    }
    enum DisplayFlashSpeed
    {
        OFF
        SLOW
        FAST
    }
    Display_Treiber - -* SEG_Driver
    Display_Treiber -> DisplayFlashSpeed

    class LED_Treiber
    {
        .. Definitions ..
        # SEMAPHORE_TIMEOUT = 100 ms
        .. Static Variables ..
        + ledSemaphoreHandleId : osSemaphoreId_t
        .. Static Functions ..
        LED_Toggle(Led led) : void
        LED_Set(Led led, bool state) : void
    }
    note top of LED_Treiber
        LED_Toggle and LED_Set write to the LED pins and
        use the LED semaphore
    end note
    enum Led
    {
        LED1
        LED2
        LED3
        LED4
    }
    LED_Treiber -> Led

    class Taster_Treiber
    {
        .. Definitions ..
        # AMOUNT_OF_TASTERS = 3
        .. Static Variables ..
        - {static} TASTER_STATUS : bool[AMOUNT_OF_TASTERS]
        - {static} TASTER_HAS_CHANGED : bool[AMOUNT_OF_TASTERS]
        - {static} TASTER_CALLBACK : void(*)[AMOUNT_OF_TASTERS]
        - {static} TASTER_LONG_CALLBACK : void(*)[AMOUNT_OF_TASTERS]
        .. Static Functions ..
        - Update_Taster(Taster taster) : void
        - HasCallback(Taster taster) : bool
        - HasLongCallback(Taster taster) : bool
        - IsLongPress(Taster taster) : bool
        - TriggerCallback(Taster taster) : void
        .. Global Functions ..
        + TasterTask(void *argument) : void
        + Set_Taster_Callback(Taster taster, void (*callback)(void)) : void
        + Set_Taster_Long_Callback(Taster taster, void (*callback)(void)) : void
        + Taster_Pressed(Taster taster) : void
        + Taster_Get(Taster taster) : bool
    }
    note left of Taster_Treiber::Update_Taster
        Reads the taster pin and 
        sets the taster status
    end note
    note left of Taster_Treiber::TasterTask
        Triggers the callbacks and 
        checks for long presses
        When a callback is triggered,
        the buzzer is beeped
    end note
    note left of Taster_Treiber::Taster_Pressed
        Is called by the interrupt handler
    end note
    enum Taster
    {
        TASTER_1
        TASTER_2
        TASTER_3
    }
    Taster_Treiber -> Taster
    Taster_Treiber - -> Buzzer_Treiber
}
StateEvent - -> Drivers
note on link
    The StateEvent uses all drivers
end note

@enduml

@startuml "M242 - Class Diagram"
hide empty members

package StateEventFiles <<Rectangle>> {
    class StateEvent
    {
        .. Definitions ..
        # TIMER_CHANGE_DELAY = 250 ms
        # TIMER_CHANGE_DELAY_FAST = 50 ms
        .. Static Variables ..
        - {static} currentState : State
        - {static} hasStateChanged : bool
        .. Internal Functions ..
        - ChangeState() : void
        - InitStateEvent() : void
        - ShowLedState() : void
        - ShowCurrentTime() : void
        ..
        - Stoppuhr_LeereZeitAnzeigen() : void
        - Stoppuhr_AktuelleZeitAnzeigen() : void
        - Stoppuhr_ZwischenzeitAnzeigen() : void
        - Stoppuhr_EndzeitAnzeigen() : void
        ..
        - Timer_EingerichteteZeitAnzeigen() : void
        - Timer_ZeitErhoehen() : void
        - Timer_ZeitVerringern() : void
        - Timer_AktuelleZeitAnzeigen() : void
        - Timer_Pausieren() : void
        - Timer_TimerAbgelaufen() : void
        .. Global Functions ..
        + StateEventTask(void *argument) : void
    }
    enum State
    {
        STATE_STOPWATCH
        STATE_TIMER
    }
    StateEvent -> State

    class Stopwatch
    {
        .. Static Variables ..
        - {static} isStopwatchRunning : bool
        - {static} isShowingIntermediateTime : bool
        - {static} currentTime : unsigned int
        - {static} intermediateTime : unsigned int
        .. Global Functions ..
        + StopwatchTask(void *argument) : void
        + StartStopwatch() : void
        + StopStopwatch() : void
        + ResetStopwatch() : void
        + ShowIntermediateTime() : void
        + GetStopwatchTime() : unsigned int
        + IsStopwatchRunning() : bool
        + IsShowingIntermediateTime() : bool
    }

    class Timer
    {
        .. Static Variables ..
        - {static} isConfiguringTimer : bool
        - {static} isTimerRunning : bool
        - {static} isTimeUp : bool
        - {static} currentTime : unsigned int
        - {static} timerUpCallback : void(*)
        .. Global Functions ..
        + TimerTask(void *argument) : void
        + SetTimerUpCallback(void (*callback)()) : void
        + IncrementTime() : void
        + DecrementTime() : void
        + StartTimer() : void
        + PauseTimer() : void
        + ResumeTimer() : void
        + ResetTimer() : void
        + GetTimerTime() : unsigned int
        + IsConfiguringTimer() : bool
        + IsTimerRunning() : bool
        + IsTimerPaused() : bool
        + IsTimeUp() : bool
    }

    StateEvent - -> Timer
    StateEvent - -> Stopwatch

}

package Drivers <<Rectangle>>
{
    class Buzzer_Treiber
    {
        .. Definitions ..
        # SEMAPHORE_TIMEOUT = 100 ms
        # DEFAULT_BUZZER_DELAY = 10 ms
        .. Static Variables ..
        + buzzerSemaphoreHandleId : osSemaphoreId_t
        - {static} buzzUntil : long
        - {static} isBuzzerOn : bool
        .. Internal Functions ..
        - SetBuzzer(bool state) : void
        - IsBuzzTimeReached() : bool
        .. Global Functions ..
        + BuzzerTask(void *argument) : void
        + BuzzerBeep(int length) : void
    }
    note left of Buzzer_Treiber::SetBuzzer
      Writes to the buzzer pin and 
      use the buzzer semaphore
    end note

    abstract SEG_Driver {}
    note right of SEG_Driver
        File for the 7-segment display
        Not to be used directly but only by Display_Treiber
    end note

    class Display_Treiber <? extends SEG_Driver> 
    {
        .. Definitions ..
        # FORMAT_DECIMAL_POINT_M_S_F = SEG_Driver_DP_2 | SEG_Driver_DP_4
        # FORMAT_DECIMAL_POINT_M_S = SEG_Driver_DP_3
        .. Internal Functions ..
        - ConvertTimeToDisplay(unsinged int tenths, int *decimalPoint) : int
        - WriteTimeToDisplay(unsigned int time, int flashSpeed) : void
        .. Global Functions ..
        + DisplayUpdateTask(void *argument) : void
        + DisplayTime(unsigned int time) : void
        + DisplayFlashTime(unsigned int time, DisplayFlashSpeed flashSpeed) : void
    }
    enum DisplayFlashSpeed
    {
        OFF
        SLOW
        FAST
    }
    Display_Treiber - -* SEG_Driver
    Display_Treiber -> DisplayFlashSpeed

    class LED_Treiber
    {
        .. Definitions ..
        # SEMAPHORE_TIMEOUT = 100 ms
        .. Static Variables ..
        + ledSemaphoreHandleId : osSemaphoreId_t
        .. Static Functions ..
        LED_Toggle(Led led) : void
        LED_Set(Led led, bool state) : void
    }
    note top of LED_Treiber
        LED_Toggle and LED_Set write to the LED pins and
        use the LED semaphore
    end note
    enum Led
    {
        LED1
        LED2
        LED3
        LED4
    }
    LED_Treiber -> Led

    class Taster_Treiber
    {
        .. Definitions ..
        # AMOUNT_OF_TASTERS = 3
        .. Static Variables ..
        - {static} TASTER_STATUS : bool[AMOUNT_OF_TASTERS]
        - {static} TASTER_HAS_CHANGED : bool[AMOUNT_OF_TASTERS]
        - {static} TASTER_CALLBACK : void(*)[AMOUNT_OF_TASTERS]
        - {static} TASTER_LONG_CALLBACK : void(*)[AMOUNT_OF_TASTERS]
        .. Static Functions ..
        - Update_Taster(Taster taster) : void
        - HasCallback(Taster taster) : bool
        - HasLongCallback(Taster taster) : bool
        - IsLongPress(Taster taster) : bool
        - TriggerCallback(Taster taster) : void
        .. Global Functions ..
        + TasterTask(void *argument) : void
        + Set_Taster_Callback(Taster taster, void (*callback)(void)) : void
        + Set_Taster_Long_Callback(Taster taster, void (*callback)(void)) : void
        + Taster_Pressed(Taster taster) : void
        + Taster_Get(Taster taster) : bool
    }
    note left of Taster_Treiber::Update_Taster
        Reads the taster pin and 
        sets the taster status
    end note
    note left of Taster_Treiber::TasterTask
        Triggers the callbacks and 
        checks for long presses
        When a callback is triggered,
        the buzzer is beeped
    end note
    note left of Taster_Treiber::Taster_Pressed
        Is called by the interrupt handler
    end note
    enum Taster
    {
        TASTER_1
        TASTER_2
        TASTER_3
    }
    Taster_Treiber -> Taster
    Taster_Treiber - -> Buzzer_Treiber
}
StateEvent - -> Drivers
note on link
    The StateEvent uses all drivers
end note

@enduml

PlantUML version 1.2022.7(Mon Aug 22 19:01:30 CEST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: de
Country: CH
--></g></svg>