<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1466px" preserveAspectRatio="none" style="width:2679px;height:1466px;background:#FFFFFF;" version="1.1" viewBox="0 0 2679 1466" width="2679px" zoomAndPan="magnify"><defs/><g><rect fill="none" height="27.6094" id="_title" style="stroke:none;stroke-width:1.0;" width="159" x="1253" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="149" x="1258" y="24.5332">M242 - Class Diagram</text><!--MD5=[7bb66ef33c72b8468f292779fd990855]
cluster StateEventFiles--><g id="cluster_StateEventFiles"><rect fill="none" height="1058.5" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="641" x="7" y="45.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="111" x="272" y="62.1426">StateEventFiles</text></g><!--MD5=[06d07874b31b21c282b1021122bda260]
cluster Drivers--><g id="cluster_Drivers"><rect fill="none" height="811.5" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;" width="1993" x="680" y="648.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="52" x="1650.5" y="665.1426">Drivers</text></g><!--MD5=[ce6ff150f7db3950f579d32b927a40a8]
class StateEvent--><g id="elem_StateEvent"><rect codeLine="5" fill="#F1F1F1" height="477.0156" id="StateEvent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="284" x="159" y="81.6094"/><ellipse cx="262.25" cy="97.6094" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M265.0156,93.4844 Q265.1719,93.2656 265.3594,93.1563 Q265.5469,93.0469 265.7656,93.0469 Q266.1406,93.0469 266.375,93.3125 Q266.6094,93.5625 266.6094,94.1719 L266.6094,95.625 Q266.6094,96.2344 266.375,96.5 Q266.1406,96.7656 265.7656,96.7656 Q265.4219,96.7656 265.2188,96.5625 Q265.0156,96.375 264.9063,95.8594 Q264.8594,95.5 264.6719,95.3125 Q264.3438,94.9375 263.7344,94.7188 Q263.125,94.5 262.5,94.5 Q261.7344,94.5 261.0938,94.8281 Q260.4688,95.1563 259.9688,95.9063 Q259.4844,96.6563 259.4844,97.6875 L259.4844,98.7813 Q259.4844,100.0156 260.375,100.8438 Q261.2656,101.6563 262.8594,101.6563 Q263.7969,101.6563 264.4531,101.4063 Q264.8438,101.25 265.2656,100.8125 Q265.5313,100.5469 265.6719,100.4688 Q265.8281,100.3906 266.0313,100.3906 Q266.3594,100.3906 266.6094,100.6563 Q266.875,100.9063 266.875,101.25 Q266.875,101.5938 266.5313,102 Q266.0313,102.5781 265.2344,102.9063 Q264.1563,103.3594 262.8594,103.3594 Q261.3438,103.3594 260.1406,102.7344 Q259.1563,102.2344 258.4688,101.1719 Q257.7813,100.0938 257.7813,98.8125 L257.7813,97.6563 Q257.7813,96.3281 258.3906,95.1875 Q259.0156,94.0313 260.1094,93.4219 Q261.2031,92.7969 262.4375,92.7969 Q263.1719,92.7969 263.8125,92.9688 Q264.4688,93.125 265.0156,93.4844 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="69" x="282.75" y="103.3379">StateEvent</text><line style="stroke:#181818;stroke-width:0.5;" x1="160" x2="442" y1="113.6094" y2="113.6094"/><polygon fill="none" points="170,144.5234,174,148.5234,170,152.5234,166,148.5234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="179" y="153.752">TIMER_CHANGE_DELAY = 250 ms</text><polygon fill="none" points="170,162.1328,174,166.1328,170,170.1328,166,166.1328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="179" y="171.3613">TIMER_CHANGE_DELAY_FAST = 50 ms</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="160" x2="268" y1="130.4141" y2="130.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="268" y="135.6426">Definitions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="334" x2="442" y1="130.4141" y2="130.4141"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="203.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="123" x="179" y="210.5801">currentState : State</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="220.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="153" x="179" y="228.1895">hasStateChanged : bool</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="160" x2="252" y1="187.2422" y2="187.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="252" y="192.4707">Static Variables</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="350" x2="442" y1="187.2422" y2="187.2422"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="260.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="179" y="267.4082">ChangeState() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="277.7891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="179" y="285.0176">InitStateEvent() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="295.3984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="179" y="302.627">ShowLedState() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="313.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="179" y="320.2363">ShowCurrentTime() : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="160" x2="244.5" y1="244.0703" y2="244.0703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="244.5" y="249.2988">Internal Functions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="357.5" x2="442" y1="244.0703" y2="244.0703"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="160" x2="442" y1="327.3125" y2="327.3125"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="338.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="232" x="179" y="345.8457">Stoppuhr_LeereZeitAnzeigen() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="356.2266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="245" x="179" y="363.4551">Stoppuhr_AktuelleZeitAnzeigen() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="373.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="251" x="179" y="381.0645">Stoppuhr_ZwischenzeitAnzeigen() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="391.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="179" y="398.6738">Stoppuhr_EndzeitAnzeigen() : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="160" x2="442" y1="405.75" y2="405.75"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="417.0547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="256" x="179" y="424.2832">Timer_EingerichteteZeitAnzeigen() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="434.6641"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="179" y="441.8926">Timer_ZeitErhoehen() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="452.2734"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="179" y="459.502">Timer_ZeitVerringern() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="469.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="179" y="477.1113">Timer_AktuelleZeitAnzeigen() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="487.4922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="179" y="494.7207">Timer_Pausieren() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="167" y="505.1016"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="179" y="512.3301">Timer_TimerAbgelaufen() : void</text><ellipse cx="170" cy="547.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="243" x="179" y="551.5488">StateEventTask(void *argument) : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="160" x2="247.5" y1="528.2109" y2="528.2109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="247.5" y="533.4395">Global Functions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="354.5" x2="442" y1="528.2109" y2="528.2109"/></g><!--MD5=[60d6b92408f98aed8df94d5c6e04aa63]
class State--><g id="elem_State"><rect codeLine="33" fill="#F1F1F1" height="75.2188" id="State" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="153" x="478.5" y="282.6094"/><ellipse cx="534.25" cy="298.6094" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M533.1094,299.4063 L533.1094,301.9063 L537.4375,301.9063 L537.4375,300.9844 Q537.4375,300.375 537.6719,300.1094 Q537.9219,299.8438 538.2969,299.8438 Q538.6719,299.8438 538.9063,300.1094 Q539.1406,300.375 539.1406,300.9844 L539.1406,303.6094 L531.1406,303.6094 Q530.5156,303.6094 530.25,303.375 Q530,303.1406 530,302.75 Q530,302.375 530.2656,302.1406 Q530.5313,301.9063 531.1406,301.9063 L531.4063,301.9063 L531.4063,295.25 L531.1406,295.25 Q530.5156,295.25 530.25,295.0156 Q530,294.7813 530,294.3906 Q530,294.0156 530.25,293.7813 Q530.5156,293.5469 531.1406,293.5469 L538.7656,293.5469 L538.7656,296.1406 Q538.7656,296.75 538.5313,297.0156 Q538.3125,297.2656 537.9219,297.2656 Q537.5469,297.2656 537.3125,297.0156 Q537.0781,296.75 537.0781,296.1406 L537.0781,295.25 L533.1094,295.25 L533.1094,297.7031 L534.5938,297.7031 Q534.5938,297.0469 534.7188,296.8594 Q534.9844,296.4531 535.4531,296.4531 Q535.8281,296.4531 536.0625,296.7188 Q536.2969,296.9688 536.2969,297.5781 L536.2969,299.5469 Q536.2969,300.0938 536.1719,300.2813 Q535.9063,300.6719 535.4531,300.6719 Q534.9844,300.6719 534.7188,300.2656 Q534.5938,300.0781 534.5938,299.4063 L533.1094,299.4063 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="33" x="554.75" y="304.3379">State</text><line style="stroke:#181818;stroke-width:0.5;" x1="479.5" x2="630.5" y1="314.6094" y2="314.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="484.5" y="333.1426">STATE_STOPWATCH</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="484.5" y="350.752">STATE_TIMER</text></g><!--MD5=[c0aad78264ddd70947ad708086fa83ba]
class Stopwatch--><g id="elem_Stopwatch"><rect codeLine="40" fill="#F1F1F1" height="294.5313" id="Stopwatch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="265" x="23.5" y="740.6094"/><ellipse cx="119.25" cy="756.6094" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M122.0156,752.4844 Q122.1719,752.2656 122.3594,752.1563 Q122.5469,752.0469 122.7656,752.0469 Q123.1406,752.0469 123.375,752.3125 Q123.6094,752.5625 123.6094,753.1719 L123.6094,754.625 Q123.6094,755.2344 123.375,755.5 Q123.1406,755.7656 122.7656,755.7656 Q122.4219,755.7656 122.2188,755.5625 Q122.0156,755.375 121.9063,754.8594 Q121.8594,754.5 121.6719,754.3125 Q121.3438,753.9375 120.7344,753.7188 Q120.125,753.5 119.5,753.5 Q118.7344,753.5 118.0938,753.8281 Q117.4688,754.1563 116.9688,754.9063 Q116.4844,755.6563 116.4844,756.6875 L116.4844,757.7813 Q116.4844,759.0156 117.375,759.8438 Q118.2656,760.6563 119.8594,760.6563 Q120.7969,760.6563 121.4531,760.4063 Q121.8438,760.25 122.2656,759.8125 Q122.5313,759.5469 122.6719,759.4688 Q122.8281,759.3906 123.0313,759.3906 Q123.3594,759.3906 123.6094,759.6563 Q123.875,759.9063 123.875,760.25 Q123.875,760.5938 123.5313,761 Q123.0313,761.5781 122.2344,761.9063 Q121.1563,762.3594 119.8594,762.3594 Q118.3438,762.3594 117.1406,761.7344 Q116.1563,761.2344 115.4688,760.1719 Q114.7813,759.0938 114.7813,757.8125 L114.7813,756.6563 Q114.7813,755.3281 115.3906,754.1875 Q116.0156,753.0313 117.1094,752.4219 Q118.2031,751.7969 119.4375,751.7969 Q120.1719,751.7969 120.8125,751.9688 Q121.4688,752.125 122.0156,752.4844 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="139.75" y="762.3379">Stopwatch</text><line style="stroke:#181818;stroke-width:0.5;" x1="24.5" x2="287.5" y1="772.6094" y2="772.6094"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="31.5" y="805.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="167" x="43.5" y="812.752">isStopwatchRunning : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="31.5" y="823.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="211" x="43.5" y="830.3613">isShowingIntermediateTime : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="31.5" y="840.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="165" x="43.5" y="847.9707">currentTime : unsigned int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="31.5" y="858.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="198" x="43.5" y="865.5801">intermediateTime : unsigned int</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="24.5" x2="107" y1="789.4141" y2="789.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="107" y="794.6426">Static Variables</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="205" x2="287.5" y1="789.4141" y2="789.4141"/><ellipse cx="34.5" cy="900.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="43.5" y="904.7988">StopwatchTask(void *argument) : void</text><ellipse cx="34.5" cy="918.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="43.5" y="922.4082">StartStopwatch() : void</text><ellipse cx="34.5" cy="935.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="43.5" y="940.0176">StopStopwatch() : void</text><ellipse cx="34.5" cy="953.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="43.5" y="957.627">ResetStopwatch() : void</text><ellipse cx="34.5" cy="971.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="191" x="43.5" y="975.2363">ShowIntermediateTime() : void</text><ellipse cx="34.5" cy="988.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="43.5" y="992.8457">GetStopwatchTime() : unsigned int</text><ellipse cx="34.5" cy="1006.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="43.5" y="1010.4551">IsStopwatchRunning() : bool</text><ellipse cx="34.5" cy="1023.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="43.5" y="1028.0645">IsShowingIntermediateTime() : bool</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="24.5" x2="102.5" y1="881.4609" y2="881.4609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="102.5" y="886.6895">Global Functions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="209.5" x2="287.5" y1="881.4609" y2="881.4609"/></g><!--MD5=[1b844c90688aafb95cd8c95626c3b83a]
class Timer--><g id="elem_Timer"><rect codeLine="58" fill="#F1F1F1" height="400.1875" id="Timer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="308" x="324" y="688.1094"/><ellipse cx="455.75" cy="704.1094" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M458.5156,699.9844 Q458.6719,699.7656 458.8594,699.6563 Q459.0469,699.5469 459.2656,699.5469 Q459.6406,699.5469 459.875,699.8125 Q460.1094,700.0625 460.1094,700.6719 L460.1094,702.125 Q460.1094,702.7344 459.875,703 Q459.6406,703.2656 459.2656,703.2656 Q458.9219,703.2656 458.7188,703.0625 Q458.5156,702.875 458.4063,702.3594 Q458.3594,702 458.1719,701.8125 Q457.8438,701.4375 457.2344,701.2188 Q456.625,701 456,701 Q455.2344,701 454.5938,701.3281 Q453.9688,701.6563 453.4688,702.4063 Q452.9844,703.1563 452.9844,704.1875 L452.9844,705.2813 Q452.9844,706.5156 453.875,707.3438 Q454.7656,708.1563 456.3594,708.1563 Q457.2969,708.1563 457.9531,707.9063 Q458.3438,707.75 458.7656,707.3125 Q459.0313,707.0469 459.1719,706.9688 Q459.3281,706.8906 459.5313,706.8906 Q459.8594,706.8906 460.1094,707.1563 Q460.375,707.4063 460.375,707.75 Q460.375,708.0938 460.0313,708.5 Q459.5313,709.0781 458.7344,709.4063 Q457.6563,709.8594 456.3594,709.8594 Q454.8438,709.8594 453.6406,709.2344 Q452.6563,708.7344 451.9688,707.6719 Q451.2813,706.5938 451.2813,705.3125 L451.2813,704.1563 Q451.2813,702.8281 451.8906,701.6875 Q452.5156,700.5313 453.6094,699.9219 Q454.7031,699.2969 455.9375,699.2969 Q456.6719,699.2969 457.3125,699.4688 Q457.9688,699.625 458.5156,699.9844 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="36" x="476.25" y="709.8379">Timer</text><line style="stroke:#181818;stroke-width:0.5;" x1="325" x2="631" y1="720.1094" y2="720.1094"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="332" y="753.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="344" y="760.252">isConfiguringTimer : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="332" y="770.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="138" x="344" y="777.8613">isTimerRunning : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="332" y="788.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="97" x="344" y="795.4707">isTimeUp : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="332" y="805.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="165" x="344" y="813.0801">currentTime : unsigned int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="332" y="823.4609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="155" x="344" y="830.6895">timerUpCallback : void(*)</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="325" x2="429" y1="736.9141" y2="736.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="429" y="742.1426">Static Variables</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="527" x2="631" y1="736.9141" y2="736.9141"/><ellipse cx="335" cy="865.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="344" y="869.9082">TimerTask(void *argument) : void</text><ellipse cx="335" cy="883.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="344" y="887.5176">SetTimerUpCallback(void (*callback)()) : void</text><ellipse cx="335" cy="900.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="344" y="905.127">IncrementTime() : void</text><ellipse cx="335" cy="918.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="344" y="922.7363">DecrementTime() : void</text><ellipse cx="335" cy="936.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="344" y="940.3457">StartTimer() : void</text><ellipse cx="335" cy="953.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="344" y="957.9551">PauseTimer() : void</text><ellipse cx="335" cy="971.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="344" y="975.5645">ResumeTimer() : void</text><ellipse cx="335" cy="988.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="344" y="993.1738">ResetTimer() : void</text><ellipse cx="335" cy="1006.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="344" y="1010.7832">GetTimerTime() : unsigned int</text><ellipse cx="335" cy="1024.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="344" y="1028.3926">IsConfiguringTimer() : bool</text><ellipse cx="335" cy="1041.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="344" y="1046.002">IsTimerRunning() : bool</text><ellipse cx="335" cy="1059.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="344" y="1063.6113">IsTimerPaused() : bool</text><ellipse cx="335" cy="1076.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="344" y="1081.2207">IsTimeUp() : bool</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="325" x2="424.5" y1="846.5703" y2="846.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="424.5" y="851.7988">Global Functions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="531.5" x2="631" y1="846.5703" y2="846.5703"/></g><!--MD5=[f0a055ccd8bc38ddd8d8ac6549a9e12f]
class Buzzer_Treiber--><g id="elem_Buzzer_Treiber"><rect codeLine="90" fill="#F1F1F1" height="284.9219" id="Buzzer_Treiber" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="318" x="1396" y="1151.1094"/><ellipse cx="1502.75" cy="1167.1094" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1505.5156,1162.9844 Q1505.6719,1162.7656 1505.8594,1162.6563 Q1506.0469,1162.5469 1506.2656,1162.5469 Q1506.6406,1162.5469 1506.875,1162.8125 Q1507.1094,1163.0625 1507.1094,1163.6719 L1507.1094,1165.125 Q1507.1094,1165.7344 1506.875,1166 Q1506.6406,1166.2656 1506.2656,1166.2656 Q1505.9219,1166.2656 1505.7188,1166.0625 Q1505.5156,1165.875 1505.4063,1165.3594 Q1505.3594,1165 1505.1719,1164.8125 Q1504.8438,1164.4375 1504.2344,1164.2188 Q1503.625,1164 1503,1164 Q1502.2344,1164 1501.5938,1164.3281 Q1500.9688,1164.6563 1500.4688,1165.4063 Q1499.9844,1166.1563 1499.9844,1167.1875 L1499.9844,1168.2813 Q1499.9844,1169.5156 1500.875,1170.3438 Q1501.7656,1171.1563 1503.3594,1171.1563 Q1504.2969,1171.1563 1504.9531,1170.9063 Q1505.3438,1170.75 1505.7656,1170.3125 Q1506.0313,1170.0469 1506.1719,1169.9688 Q1506.3281,1169.8906 1506.5313,1169.8906 Q1506.8594,1169.8906 1507.1094,1170.1563 Q1507.375,1170.4063 1507.375,1170.75 Q1507.375,1171.0938 1507.0313,1171.5 Q1506.5313,1172.0781 1505.7344,1172.4063 Q1504.6563,1172.8594 1503.3594,1172.8594 Q1501.8438,1172.8594 1500.6406,1172.2344 Q1499.6563,1171.7344 1498.9688,1170.6719 Q1498.2813,1169.5938 1498.2813,1168.3125 L1498.2813,1167.1563 Q1498.2813,1165.8281 1498.8906,1164.6875 Q1499.5156,1163.5313 1500.6094,1162.9219 Q1501.7031,1162.2969 1502.9375,1162.2969 Q1503.6719,1162.2969 1504.3125,1162.4688 Q1504.9688,1162.625 1505.5156,1162.9844 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="1523.25" y="1172.8379">Buzzer_Treiber</text><line style="stroke:#181818;stroke-width:0.5;" x1="1397" x2="1713" y1="1183.1094" y2="1183.1094"/><polygon fill="none" points="1407,1214.0234,1411,1218.0234,1407,1222.0234,1403,1218.0234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="217" x="1416" y="1223.252">SEMAPHORE_TIMEOUT = 100 ms</text><polygon fill="none" points="1407,1231.6328,1411,1235.6328,1407,1239.6328,1403,1235.6328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="231" x="1416" y="1240.8613">DEFAULT_BUZZER_DELAY = 10 ms</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1397" x2="1522" y1="1199.9141" y2="1199.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="1522" y="1205.1426">Definitions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1588" x2="1713" y1="1199.9141" y2="1199.9141"/><ellipse cx="1407" cy="1275.8516" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="1416" y="1280.0801">buzzerSemaphoreHandleId : osSemaphoreId_t</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1404" y="1290.4609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="94" x="1416" y="1297.6895">buzzUntil : long</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1404" y="1308.0703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="110" x="1416" y="1315.2988">isBuzzerOn : bool</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1397" x2="1506" y1="1256.7422" y2="1256.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="1506" y="1261.9707">Static Variables</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1604" x2="1713" y1="1256.7422" y2="1256.7422"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1404" y="1347.2891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="1416" y="1354.5176">SetBuzzer(bool state) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1404" y="1364.8984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="1416" y="1372.127">IsBuzzTimeReached() : bool</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1397" x2="1498.5" y1="1331.1797" y2="1331.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="1498.5" y="1336.4082">Internal Functions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1611.5" x2="1713" y1="1331.1797" y2="1331.1797"/><ellipse cx="1407" cy="1407.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216" x="1416" y="1411.3457">BuzzerTask(void *argument) : void</text><ellipse cx="1407" cy="1424.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="1416" y="1428.9551">BuzzerBeep(int length) : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1397" x2="1501.5" y1="1388.0078" y2="1388.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="1501.5" y="1393.2363">Global Functions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1608.5" x2="1713" y1="1388.0078" y2="1388.0078"/></g><path d="M1171.5,1267.1094 L1171.5,1309.8125 A0,0 0 0 0 1171.5,1309.8125 L1360.5,1309.8125 A0,0 0 0 0 1360.5,1309.8125 L1360.5,1292.4609 L1400,1348.7891 L1360.5,1284.4609 L1360.5,1277.1094 L1350.5,1267.1094 L1171.5,1267.1094 A0,0 0 0 0 1171.5,1267.1094 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1350.5,1267.1094 L1350.5,1277.1094 L1360.5,1277.1094 L1350.5,1267.1094 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="164" x="1177.5" y="1285.6045">Writes to the buzzer pin and</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="154" x="1177.5" y="1301.9561">use the buzzer semaphore</text><!--MD5=[a83a09feacc67daa98e9f8ee796abd28]
class SEG_Driver--><g id="elem_SEG_Driver"><rect codeLine="111" fill="#F1F1F1" height="32" id="SEG_Driver" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="106" x="2148" y="1277.6094"/><ellipse cx="2163" cy="1293.6094" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2165.1875,1295.375 L2161.0469,1295.375 L2160.625,1296.4063 L2161.0469,1296.4063 Q2161.6563,1296.4063 2161.9219,1296.6406 Q2162.1875,1296.875 2162.1875,1297.2656 Q2162.1875,1297.6406 2161.9219,1297.875 Q2161.6563,1298.1094 2161.0469,1298.1094 L2158.75,1298.1094 Q2158.1406,1298.1094 2157.8906,1297.875 Q2157.625,1297.6406 2157.625,1297.25 Q2157.625,1296.875 2157.9063,1296.6406 Q2158.1719,1296.3906 2158.7969,1296.4063 L2161.4688,1289.75 L2160.3594,1289.75 Q2159.75,1289.75 2159.4844,1289.5156 Q2159.2188,1289.2813 2159.2188,1288.8906 Q2159.2188,1288.5156 2159.4844,1288.2813 Q2159.75,1288.0469 2160.3594,1288.0469 L2164.0313,1288.0469 L2167.4219,1296.4063 Q2168.0156,1296.4063 2168.2031,1296.5469 Q2168.5938,1296.8125 2168.5938,1297.2656 Q2168.5938,1297.6406 2168.3281,1297.875 Q2168.0781,1298.1094 2167.4688,1298.1094 L2165.1719,1298.1094 Q2164.5625,1298.1094 2164.2969,1297.875 Q2164.0313,1297.6406 2164.0313,1297.25 Q2164.0313,1296.875 2164.2969,1296.6406 Q2164.5625,1296.4063 2165.1719,1296.4063 L2165.5938,1296.4063 L2165.1875,1295.375 Z M2164.4688,1293.6719 L2163.1094,1290.2969 L2161.7344,1293.6719 L2164.4688,1293.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="74" x="2177" y="1299.3379">SEG_Driver</text></g><g id="elem_GMN15"><path d="M2289.5,1272.1094 L2289.5,1289.6094 L2254.12,1293.6094 L2289.5,1297.6094 L2289.5,1314.8125 A0,0 0 0 0 2289.5,1314.8125 L2602.5,1314.8125 A0,0 0 0 0 2602.5,1314.8125 L2602.5,1282.1094 L2592.5,1272.1094 L2289.5,1272.1094 A0,0 0 0 0 2289.5,1272.1094 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M2592.5,1272.1094 L2592.5,1282.1094 L2602.5,1282.1094 L2592.5,1272.1094 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="171" x="2295.5" y="1290.6045">File for the 7-segment display</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="292" x="2295.5" y="1306.9561">Not to be used directly but only by Display_Treiber</text></g><!--MD5=[9b62a42031254a83372285e9581ed046]
class Display_Treiber--><g id="elem_Display_Treiber"><rect codeLine="117" fill="#F1F1F1" height="228.0938" id="Display_Treiber" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="518" x="1942" y="774.1094"/><ellipse cx="2084.25" cy="790.1094" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2087.0156,785.9844 Q2087.1719,785.7656 2087.3594,785.6563 Q2087.5469,785.5469 2087.7656,785.5469 Q2088.1406,785.5469 2088.375,785.8125 Q2088.6094,786.0625 2088.6094,786.6719 L2088.6094,788.125 Q2088.6094,788.7344 2088.375,789 Q2088.1406,789.2656 2087.7656,789.2656 Q2087.4219,789.2656 2087.2188,789.0625 Q2087.0156,788.875 2086.9063,788.3594 Q2086.8594,788 2086.6719,787.8125 Q2086.3438,787.4375 2085.7344,787.2188 Q2085.125,787 2084.5,787 Q2083.7344,787 2083.0938,787.3281 Q2082.4688,787.6563 2081.9688,788.4063 Q2081.4844,789.1563 2081.4844,790.1875 L2081.4844,791.2813 Q2081.4844,792.5156 2082.375,793.3438 Q2083.2656,794.1563 2084.8594,794.1563 Q2085.7969,794.1563 2086.4531,793.9063 Q2086.8438,793.75 2087.2656,793.3125 Q2087.5313,793.0469 2087.6719,792.9688 Q2087.8281,792.8906 2088.0313,792.8906 Q2088.3594,792.8906 2088.6094,793.1563 Q2088.875,793.4063 2088.875,793.75 Q2088.875,794.0938 2088.5313,794.5 Q2088.0313,795.0781 2087.2344,795.4063 Q2086.1563,795.8594 2084.8594,795.8594 Q2083.3438,795.8594 2082.1406,795.2344 Q2081.1563,794.7344 2080.4688,793.6719 Q2079.7813,792.5938 2079.7813,791.3125 L2079.7813,790.1563 Q2079.7813,788.8281 2080.3906,787.6875 Q2081.0156,786.5313 2082.1094,785.9219 Q2083.2031,785.2969 2084.4375,785.2969 Q2085.1719,785.2969 2085.8125,785.4688 Q2086.4688,785.625 2087.0156,785.9844 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="2104.75" y="795.8379">Display_Treiber</text><rect fill="#FFFFFF" height="17.0938" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="123" x="2340" y="771.1094"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="121" x="2341" y="784.5664">? extends SEG_Driver</text><line style="stroke:#181818;stroke-width:0.5;" x1="1943" x2="2459" y1="806.1094" y2="806.1094"/><polygon fill="none" points="1953,837.0234,1957,841.0234,1953,845.0234,1949,841.0234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="492" x="1962" y="846.252">FORMAT_DECIMAL_POINT_M_S_F = SEG_Driver_DP_2 | SEG_Driver_DP_4</text><polygon fill="none" points="1953,854.6328,1957,858.6328,1953,862.6328,1949,858.6328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="346" x="1962" y="863.8613">FORMAT_DECIMAL_POINT_M_S = SEG_Driver_DP_3</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1943" x2="2168" y1="822.9141" y2="822.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="2168" y="828.1426">Definitions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="2234" x2="2459" y1="822.9141" y2="822.9141"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1950" y="895.8516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="413" x="1962" y="903.0801">ConvertTimeToDisplay(unsinged int tenths, int *decimalPoint) : int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1950" y="913.4609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="380" x="1962" y="920.6895">WriteTimeToDisplay(unsigned int time, int flashSpeed) : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1943" x2="2144.5" y1="879.7422" y2="879.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="2144.5" y="884.9707">Internal Functions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="2257.5" x2="2459" y1="879.7422" y2="879.7422"/><ellipse cx="1953" cy="955.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="265" x="1962" y="959.9082">DisplayUpdateTask(void *argument) : void</text><ellipse cx="1953" cy="973.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="232" x="1962" y="977.5176">DisplayTime(unsigned int time) : void</text><ellipse cx="1953" cy="990.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="472" x="1962" y="995.127">DisplayFlashTime(unsigned int time, DisplayFlashSpeed flashSpeed) : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1943" x2="2147.5" y1="936.5703" y2="936.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="2147.5" y="941.7988">Global Functions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="2254.5" x2="2459" y1="936.5703" y2="936.5703"/></g><!--MD5=[36fe5bad8306fd460ab3f4cc8dec760d]
class DisplayFlashSpeed--><g id="elem_DisplayFlashSpeed"><rect codeLine="130" fill="#F1F1F1" height="92.8281" id="DisplayFlashSpeed" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="154" x="2495" y="841.6094"/><ellipse cx="2510" cy="857.6094" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2508.8594,858.4063 L2508.8594,860.9063 L2513.1875,860.9063 L2513.1875,859.9844 Q2513.1875,859.375 2513.4219,859.1094 Q2513.6719,858.8438 2514.0469,858.8438 Q2514.4219,858.8438 2514.6563,859.1094 Q2514.8906,859.375 2514.8906,859.9844 L2514.8906,862.6094 L2506.8906,862.6094 Q2506.2656,862.6094 2506,862.375 Q2505.75,862.1406 2505.75,861.75 Q2505.75,861.375 2506.0156,861.1406 Q2506.2813,860.9063 2506.8906,860.9063 L2507.1563,860.9063 L2507.1563,854.25 L2506.8906,854.25 Q2506.2656,854.25 2506,854.0156 Q2505.75,853.7813 2505.75,853.3906 Q2505.75,853.0156 2506,852.7813 Q2506.2656,852.5469 2506.8906,852.5469 L2514.5156,852.5469 L2514.5156,855.1406 Q2514.5156,855.75 2514.2813,856.0156 Q2514.0625,856.2656 2513.6719,856.2656 Q2513.2969,856.2656 2513.0625,856.0156 Q2512.8281,855.75 2512.8281,855.1406 L2512.8281,854.25 L2508.8594,854.25 L2508.8594,856.7031 L2510.3438,856.7031 Q2510.3438,856.0469 2510.4688,855.8594 Q2510.7344,855.4531 2511.2031,855.4531 Q2511.5781,855.4531 2511.8125,855.7188 Q2512.0469,855.9688 2512.0469,856.5781 L2512.0469,858.5469 Q2512.0469,859.0938 2511.9219,859.2813 Q2511.6563,859.6719 2511.2031,859.6719 Q2510.7344,859.6719 2510.4688,859.2656 Q2510.3438,859.0781 2510.3438,858.4063 L2508.8594,858.4063 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="2524" y="863.3379">DisplayFlashSpeed</text><line style="stroke:#181818;stroke-width:0.5;" x1="2496" x2="2648" y1="873.6094" y2="873.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="29" x="2501" y="892.1426">OFF</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="2501" y="909.752">SLOW</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="36" x="2501" y="927.3613">FAST</text></g><!--MD5=[462b543007facded5e1d6de4adef20d0]
class LED_Treiber--><g id="elem_LED_Treiber"><rect codeLine="139" fill="#F1F1F1" height="175.2656" id="LED_Treiber" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="296" x="736" y="1206.1094"/><ellipse cx="839.25" cy="1222.1094" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M842.0156,1217.9844 Q842.1719,1217.7656 842.3594,1217.6563 Q842.5469,1217.5469 842.7656,1217.5469 Q843.1406,1217.5469 843.375,1217.8125 Q843.6094,1218.0625 843.6094,1218.6719 L843.6094,1220.125 Q843.6094,1220.7344 843.375,1221 Q843.1406,1221.2656 842.7656,1221.2656 Q842.4219,1221.2656 842.2188,1221.0625 Q842.0156,1220.875 841.9063,1220.3594 Q841.8594,1220 841.6719,1219.8125 Q841.3438,1219.4375 840.7344,1219.2188 Q840.125,1219 839.5,1219 Q838.7344,1219 838.0938,1219.3281 Q837.4688,1219.6563 836.9688,1220.4063 Q836.4844,1221.1563 836.4844,1222.1875 L836.4844,1223.2813 Q836.4844,1224.5156 837.375,1225.3438 Q838.2656,1226.1563 839.8594,1226.1563 Q840.7969,1226.1563 841.4531,1225.9063 Q841.8438,1225.75 842.2656,1225.3125 Q842.5313,1225.0469 842.6719,1224.9688 Q842.8281,1224.8906 843.0313,1224.8906 Q843.3594,1224.8906 843.6094,1225.1563 Q843.875,1225.4063 843.875,1225.75 Q843.875,1226.0938 843.5313,1226.5 Q843.0313,1227.0781 842.2344,1227.4063 Q841.1563,1227.8594 839.8594,1227.8594 Q838.3438,1227.8594 837.1406,1227.2344 Q836.1563,1226.7344 835.4688,1225.6719 Q834.7813,1224.5938 834.7813,1223.3125 L834.7813,1222.1563 Q834.7813,1220.8281 835.3906,1219.6875 Q836.0156,1218.5313 837.1094,1217.9219 Q838.2031,1217.2969 839.4375,1217.2969 Q840.1719,1217.2969 840.8125,1217.4688 Q841.4688,1217.625 842.0156,1217.9844 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="859.75" y="1227.8379">LED_Treiber</text><line style="stroke:#181818;stroke-width:0.5;" x1="737" x2="1031" y1="1238.1094" y2="1238.1094"/><polygon fill="none" points="747,1269.0234,751,1273.0234,747,1277.0234,743,1273.0234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="217" x="756" y="1278.252">SEMAPHORE_TIMEOUT = 100 ms</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="737" x2="851" y1="1254.9141" y2="1254.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="851" y="1260.1426">Definitions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="917" x2="1031" y1="1254.9141" y2="1254.9141"/><ellipse cx="747" cy="1313.2422" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="270" x="756" y="1317.4707">ledSemaphoreHandleId : osSemaphoreId_t</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="737" x2="835" y1="1294.1328" y2="1294.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="835" y="1299.3613">Static Variables</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="933" x2="1031" y1="1294.1328" y2="1294.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="742" y="1356.6895">LED_Toggle(Led led) : void</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="742" y="1374.2988">LED_Set(Led led, bool state) : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="737" x2="833.5" y1="1333.3516" y2="1333.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="833.5" y="1338.5801">Static Functions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="934.5" x2="1031" y1="1333.3516" y2="1333.3516"/></g><g id="elem_GMN23"><path d="M723,866.6094 L723,909.3125 A0,0 0 0 0 723,909.3125 L880,909.3125 L884,1205.8194 L888,909.3125 L1045,909.3125 A0,0 0 0 0 1045,909.3125 L1045,876.6094 L1035,866.6094 L723,866.6094 A0,0 0 0 0 723,866.6094 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1035,866.6094 L1035,876.6094 L1045,876.6094 L1035,866.6094 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="301" x="729" y="885.1045">LED_Toggle and LED_Set write to the LED pins and</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="140" x="729" y="901.4561">use the LED semaphore</text></g><!--MD5=[955689219986f065b26ea4c852f73b02]
class Led--><g id="elem_Led"><rect codeLine="153" fill="#F1F1F1" height="110.4375" id="Led" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="56" x="1067" y="1238.6094"/><ellipse cx="1082" cy="1254.6094" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1080.8594,1255.4063 L1080.8594,1257.9063 L1085.1875,1257.9063 L1085.1875,1256.9844 Q1085.1875,1256.375 1085.4219,1256.1094 Q1085.6719,1255.8438 1086.0469,1255.8438 Q1086.4219,1255.8438 1086.6563,1256.1094 Q1086.8906,1256.375 1086.8906,1256.9844 L1086.8906,1259.6094 L1078.8906,1259.6094 Q1078.2656,1259.6094 1078,1259.375 Q1077.75,1259.1406 1077.75,1258.75 Q1077.75,1258.375 1078.0156,1258.1406 Q1078.2813,1257.9063 1078.8906,1257.9063 L1079.1563,1257.9063 L1079.1563,1251.25 L1078.8906,1251.25 Q1078.2656,1251.25 1078,1251.0156 Q1077.75,1250.7813 1077.75,1250.3906 Q1077.75,1250.0156 1078,1249.7813 Q1078.2656,1249.5469 1078.8906,1249.5469 L1086.5156,1249.5469 L1086.5156,1252.1406 Q1086.5156,1252.75 1086.2813,1253.0156 Q1086.0625,1253.2656 1085.6719,1253.2656 Q1085.2969,1253.2656 1085.0625,1253.0156 Q1084.8281,1252.75 1084.8281,1252.1406 L1084.8281,1251.25 L1080.8594,1251.25 L1080.8594,1253.7031 L1082.3438,1253.7031 Q1082.3438,1253.0469 1082.4688,1252.8594 Q1082.7344,1252.4531 1083.2031,1252.4531 Q1083.5781,1252.4531 1083.8125,1252.7188 Q1084.0469,1252.9688 1084.0469,1253.5781 L1084.0469,1255.5469 Q1084.0469,1256.0938 1083.9219,1256.2813 Q1083.6563,1256.6719 1083.2031,1256.6719 Q1082.7344,1256.6719 1082.4688,1256.2656 Q1082.3438,1256.0781 1082.3438,1255.4063 L1080.8594,1255.4063 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="24" x="1096" y="1260.3379">Led</text><line style="stroke:#181818;stroke-width:0.5;" x1="1068" x2="1122" y1="1270.6094" y2="1270.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="35" x="1073" y="1289.1426">LED1</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="35" x="1073" y="1306.752">LED2</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="35" x="1073" y="1324.3613">LED3</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="35" x="1073" y="1341.9707">LED4</text></g><!--MD5=[6b4b55f4fa27e336eb72572bc06d6f60]
class Taster_Treiber--><g id="elem_Taster_Treiber"><rect codeLine="162" fill="#F1F1F1" height="390.5781" id="Taster_Treiber" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="467" x="1321.5" y="692.6094"/><ellipse cx="1503.25" cy="708.6094" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1506.0156,704.4844 Q1506.1719,704.2656 1506.3594,704.1563 Q1506.5469,704.0469 1506.7656,704.0469 Q1507.1406,704.0469 1507.375,704.3125 Q1507.6094,704.5625 1507.6094,705.1719 L1507.6094,706.625 Q1507.6094,707.2344 1507.375,707.5 Q1507.1406,707.7656 1506.7656,707.7656 Q1506.4219,707.7656 1506.2188,707.5625 Q1506.0156,707.375 1505.9063,706.8594 Q1505.8594,706.5 1505.6719,706.3125 Q1505.3438,705.9375 1504.7344,705.7188 Q1504.125,705.5 1503.5,705.5 Q1502.7344,705.5 1502.0938,705.8281 Q1501.4688,706.1563 1500.9688,706.9063 Q1500.4844,707.6563 1500.4844,708.6875 L1500.4844,709.7813 Q1500.4844,711.0156 1501.375,711.8438 Q1502.2656,712.6563 1503.8594,712.6563 Q1504.7969,712.6563 1505.4531,712.4063 Q1505.8438,712.25 1506.2656,711.8125 Q1506.5313,711.5469 1506.6719,711.4688 Q1506.8281,711.3906 1507.0313,711.3906 Q1507.3594,711.3906 1507.6094,711.6563 Q1507.875,711.9063 1507.875,712.25 Q1507.875,712.5938 1507.5313,713 Q1507.0313,713.5781 1506.2344,713.9063 Q1505.1563,714.3594 1503.8594,714.3594 Q1502.3438,714.3594 1501.1406,713.7344 Q1500.1563,713.2344 1499.4688,712.1719 Q1498.7813,711.0938 1498.7813,709.8125 L1498.7813,708.6563 Q1498.7813,707.3281 1499.3906,706.1875 Q1500.0156,705.0313 1501.1094,704.4219 Q1502.2031,703.7969 1503.4375,703.7969 Q1504.1719,703.7969 1504.8125,703.9688 Q1505.4688,704.125 1506.0156,704.4844 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="1523.75" y="714.3379">Taster_Treiber</text><line style="stroke:#181818;stroke-width:0.5;" x1="1322.5" x2="1787.5" y1="724.6094" y2="724.6094"/><polygon fill="none" points="1332.5,755.5234,1336.5,759.5234,1332.5,763.5234,1328.5,759.5234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="1341.5" y="764.752">AMOUNT_OF_TASTERS = 3</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1322.5" x2="1522" y1="741.4141" y2="741.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="1522" y="746.6426">Definitions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1588" x2="1787.5" y1="741.4141" y2="741.4141"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1329.5" y="796.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="322" x="1341.5" y="803.9707">TASTER_STATUS : bool[AMOUNT_OF_TASTERS]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1329.5" y="814.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="370" x="1341.5" y="821.5801">TASTER_HAS_CHANGED : bool[AMOUNT_OF_TASTERS]</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1329.5" y="831.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="354" x="1341.5" y="839.1895">TASTER_CALLBACK : void(*)[AMOUNT_OF_TASTERS]</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1329.5" y="849.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="401" x="1341.5" y="856.7988">TASTER_LONG_CALLBACK : void(*)[AMOUNT_OF_TASTERS]</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1322.5" x2="1506" y1="780.6328" y2="780.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="1506" y="785.8613">Static Variables</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1604" x2="1787.5" y1="780.6328" y2="780.6328"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1329.5" y="888.7891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="1341.5" y="896.0176">Update_Taster(Taster taster) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1329.5" y="906.3984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="208" x="1341.5" y="913.627">HasCallback(Taster taster) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1329.5" y="924.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240" x="1341.5" y="931.2363">HasLongCallback(Taster taster) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1329.5" y="941.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="208" x="1341.5" y="948.8457">IsLongPress(Taster taster) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1329.5" y="959.2266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="229" x="1341.5" y="966.4551">TriggerCallback(Taster taster) : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1322.5" x2="1504.5" y1="872.6797" y2="872.6797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="1504.5" y="877.9082">Static Functions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1605.5" x2="1787.5" y1="872.6797" y2="872.6797"/><ellipse cx="1332.5" cy="1001.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="1341.5" y="1005.6738">TasterTask(void *argument) : void</text><ellipse cx="1332.5" cy="1019.0547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="401" x="1341.5" y="1023.2832">Set_Taster_Callback(Taster taster, void (*callback)(void)) : void</text><ellipse cx="1332.5" cy="1036.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="441" x="1341.5" y="1040.8926">Set_Taster_Long_Callback(Taster taster, void (*callback)(void)) : void</text><ellipse cx="1332.5" cy="1054.2734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="1341.5" y="1058.502">Taster_Pressed(Taster taster) : void</text><ellipse cx="1332.5" cy="1071.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="1341.5" y="1076.1113">Taster_Get(Taster taster) : bool</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1322.5" x2="1501.5" y1="982.3359" y2="982.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="1501.5" y="987.5645">Global Functions</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1608.5" x2="1787.5" y1="982.3359" y2="982.3359"/></g><path d="M1080,801.1094 L1080,843.8125 A0,0 0 0 0 1080,843.8125 L1247,843.8125 A0,0 0 0 0 1247,843.8125 L1247,826.4609 L1325.5,890.2891 L1247,818.4609 L1247,811.1094 L1237,801.1094 L1080,801.1094 A0,0 0 0 0 1080,801.1094 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1237,801.1094 L1237,811.1094 L1247,811.1094 L1237,801.1094 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="142" x="1086" y="819.6045">Reads the taster pin and</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="124" x="1086" y="835.9561">sets the taster status</text><path d="M1080,853.8125 L1080,929.2188 A0,0 0 0 0 1080,929.2188 L1270,929.2188 A0,0 0 0 0 1270,929.2188 L1270,895.5156 L1325.5,999.9453 L1270,887.5156 L1270,863.8125 L1260,853.8125 L1080,853.8125 A0,0 0 0 0 1080,853.8125 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1260,853.8125 L1260,863.8125 L1270,863.8125 L1260,853.8125 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="152" x="1086" y="872.3076">Triggers the callbacks and</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="138" x="1086" y="888.6592">checks for long presses</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="169" x="1086" y="905.0107">When a callback is triggered,</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="121" x="1086" y="921.3623">the buzzer is beeped</text><path d="M1080,939.2188 L1080,965.5703 A0,0 0 0 0 1080,965.5703 L1286,965.5703 A0,0 0 0 0 1286,965.5703 L1286,957.2188 L1325.5,1052.7734 L1286,949.2188 L1286,949.2188 L1276,939.2188 L1080,939.2188 A0,0 0 0 0 1080,939.2188 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1276,939.2188 L1276,949.2188 L1286,949.2188 L1276,939.2188 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="185" x="1086" y="957.7139">Is called by the interrupt handler</text><!--MD5=[10ff10bbd1d87299265a61d80bb149dd]
class Taster--><g id="elem_Taster"><rect codeLine="197" fill="#F1F1F1" height="92.8281" id="Taster" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="83" x="1823.5" y="841.6094"/><ellipse cx="1843" cy="857.6094" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1841.8594,858.4063 L1841.8594,860.9063 L1846.1875,860.9063 L1846.1875,859.9844 Q1846.1875,859.375 1846.4219,859.1094 Q1846.6719,858.8438 1847.0469,858.8438 Q1847.4219,858.8438 1847.6563,859.1094 Q1847.8906,859.375 1847.8906,859.9844 L1847.8906,862.6094 L1839.8906,862.6094 Q1839.2656,862.6094 1839,862.375 Q1838.75,862.1406 1838.75,861.75 Q1838.75,861.375 1839.0156,861.1406 Q1839.2813,860.9063 1839.8906,860.9063 L1840.1563,860.9063 L1840.1563,854.25 L1839.8906,854.25 Q1839.2656,854.25 1839,854.0156 Q1838.75,853.7813 1838.75,853.3906 Q1838.75,853.0156 1839,852.7813 Q1839.2656,852.5469 1839.8906,852.5469 L1847.5156,852.5469 L1847.5156,855.1406 Q1847.5156,855.75 1847.2813,856.0156 Q1847.0625,856.2656 1846.6719,856.2656 Q1846.2969,856.2656 1846.0625,856.0156 Q1845.8281,855.75 1845.8281,855.1406 L1845.8281,854.25 L1841.8594,854.25 L1841.8594,856.7031 L1843.3438,856.7031 Q1843.3438,856.0469 1843.4688,855.8594 Q1843.7344,855.4531 1844.2031,855.4531 Q1844.5781,855.4531 1844.8125,855.7188 Q1845.0469,855.9688 1845.0469,856.5781 L1845.0469,858.5469 Q1845.0469,859.0938 1844.9219,859.2813 Q1844.6563,859.6719 1844.2031,859.6719 Q1843.7344,859.6719 1843.4688,859.2656 Q1843.3438,859.0781 1843.3438,858.4063 L1841.8594,858.4063 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="1858" y="863.3379">Taster</text><line style="stroke:#181818;stroke-width:0.5;" x1="1824.5" x2="1905.5" y1="873.6094" y2="873.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="1829.5" y="892.1426">TASTER_1</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="1829.5" y="909.752">TASTER_2</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="1829.5" y="927.3613">TASTER_3</text></g><!--MD5=[3eaf59e48516a15b49d4156ecb9e2982]
link StateEvent to State--><g id="link_StateEvent_State"><path codeLine="38" d="M443.38,320.1094 C453.28,320.1094 463.18,320.1094 473.08,320.1094 " fill="none" id="StateEvent-to-State" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="478.26,320.1094,469.26,316.1094,473.26,320.1094,469.26,324.1094,478.26,320.1094" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4a0205ac9506e2924b7344e956d9bee4]
link StateEvent to Timer--><g id="link_StateEvent_Timer"><path codeLine="83" d="M375.29,558.6794 C388.2,599.9694 401.53,642.5694 414.13,682.8594 " fill="none" id="StateEvent-to-Timer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="415.66,687.7594,416.8035,677.9771,414.1735,682.9855,409.1652,680.3555,415.66,687.7594" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4bd291457e2cb8cdd78cc29f125a51d2]
link StateEvent to Stopwatch--><g id="link_StateEvent_Stopwatch"><path codeLine="84" d="M240.14,558.6794 C224.79,618.5894 208.73,681.2894 194.8,735.6494 " fill="none" id="StateEvent-to-Stopwatch" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="193.55,740.5494,199.6617,732.8262,194.7929,735.7063,191.9128,730.8376,193.55,740.5494" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e6270b04d978fac7771439398de46f51]
link Display_Treiber to SEG_Driver--><g id="link_Display_Treiber_SEG_Driver"><path codeLine="136" d="M2201,1002.3094 C2201,1091.9994 2201,1210.8094 2201,1264.3394 " fill="none" id="Display_Treiber-to-SEG_Driver" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2201,1277.3394,2205,1271.3394,2201,1265.3394,2197,1271.3394,2201,1277.3394" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4fe1c3afc026d5c72f57e00fb9744c4f]
link Display_Treiber to DisplayFlashSpeed--><g id="link_Display_Treiber_DisplayFlashSpeed"><path codeLine="137" d="M2460.05,888.1094 C2469.85,888.1094 2479.66,888.1094 2489.47,888.1094 " fill="none" id="Display_Treiber-to-DisplayFlashSpeed" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2494.6,888.1094,2485.6,884.1094,2489.6,888.1094,2485.6,892.1094,2494.6,888.1094" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[8ec27cb07ff43039548eed8c75596287]
link LED_Treiber to Led--><g id="link_LED_Treiber_Led"><path codeLine="160" d="M1032.36,1293.6094 C1042.08,1293.6094 1051.81,1293.6094 1061.53,1293.6094 " fill="none" id="LED_Treiber-to-Led" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1066.62,1293.6094,1057.62,1289.6094,1061.62,1293.6094,1057.62,1297.6094,1066.62,1293.6094" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fee58baa2a391596c918e62e59e1dc03]
link Taster_Treiber to Taster--><g id="link_Taster_Treiber_Taster"><path codeLine="203" d="M1788.71,888.1094 C1798.52,888.1094 1808.34,888.1094 1818.15,888.1094 " fill="none" id="Taster_Treiber-to-Taster" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1823.28,888.1094,1814.28,884.1094,1818.28,888.1094,1814.28,892.1094,1823.28,888.1094" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[8060e0a240164b0d6b3e55d33cb9645d]
link Taster_Treiber to Buzzer_Treiber--><g id="link_Taster_Treiber_Buzzer_Treiber"><path codeLine="204" d="M1555,1083.7694 C1555,1104.6694 1555,1125.6694 1555,1145.8794 " fill="none" id="Taster_Treiber-to-Buzzer_Treiber" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1555,1150.9994,1559,1141.9994,1555,1145.9994,1551,1141.9994,1555,1150.9994" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fc6da8cd9b81ce3a05a929d32898624e]
link StateEvent to Drivers--><g id="link_StateEvent_Drivers"><path codeLine="206" d="M443.14,543.0594 C448.94,548.4994 454.9,553.6994 461,558.6094 C530.65,614.6294 592.15,562.8294 648,632.6094 C656.8038,643.6094 664.0466,655.7556 669.9793,668.5995 C672.9456,675.0214 675.5845,681.6178 677.9271,688.3324 C678.5128,690.0111 679.08,691.6972 679.6291,693.3897 " fill="none" id="StateEvent-to-Drivers" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="679.6291,693.3897,680.6564,683.5946,678.0861,688.6338,673.0469,686.0634,679.6291,693.3897" style="stroke:#181818;stroke-width:1.0;"/><path d="M642,593.6094 L642,619.6094 L841,619.6094 L841,603.6094 L831,593.6094 L642,593.6094 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M831,593.6094 L831,603.6094 L841,603.6094 L831,593.6094 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="178" x="648" y="612.1045">The StateEvent uses all drivers</text></g><!--MD5=[287290644f1869fb290eacb7f7989867]
@startuml "M242 - Class Diagram"
title M242 - Class Diagram
hide empty members

package StateEventFiles <<Rectangle>> {
    class StateEvent
    {
        .. Definitions ..
        # TIMER_CHANGE_DELAY = 250 ms
        # TIMER_CHANGE_DELAY_FAST = 50 ms
        .. Static Variables ..
        - {static} currentState : State
        - {static} hasStateChanged : bool
        .. Internal Functions ..
        - ChangeState() : void
        - InitStateEvent() : void
        - ShowLedState() : void
        - ShowCurrentTime() : void
        ..
        - Stoppuhr_LeereZeitAnzeigen() : void
        - Stoppuhr_AktuelleZeitAnzeigen() : void
        - Stoppuhr_ZwischenzeitAnzeigen() : void
        - Stoppuhr_EndzeitAnzeigen() : void
        ..
        - Timer_EingerichteteZeitAnzeigen() : void
        - Timer_ZeitErhoehen() : void
        - Timer_ZeitVerringern() : void
        - Timer_AktuelleZeitAnzeigen() : void
        - Timer_Pausieren() : void
        - Timer_TimerAbgelaufen() : void
        .. Global Functions ..
        + StateEventTask(void *argument) : void
    }
    enum State
    {
        STATE_STOPWATCH
        STATE_TIMER
    }
    StateEvent -> State

    class Stopwatch
    {
        .. Static Variables ..
        - {static} isStopwatchRunning : bool
        - {static} isShowingIntermediateTime : bool
        - {static} currentTime : unsigned int
        - {static} intermediateTime : unsigned int
        .. Global Functions ..
        + StopwatchTask(void *argument) : void
        + StartStopwatch() : void
        + StopStopwatch() : void
        + ResetStopwatch() : void
        + ShowIntermediateTime() : void
        + GetStopwatchTime() : unsigned int
        + IsStopwatchRunning() : bool
        + IsShowingIntermediateTime() : bool
    }

    class Timer
    {
        .. Static Variables ..
        - {static} isConfiguringTimer : bool
        - {static} isTimerRunning : bool
        - {static} isTimeUp : bool
        - {static} currentTime : unsigned int
        - {static} timerUpCallback : void(*)
        .. Global Functions ..
        + TimerTask(void *argument) : void
        + SetTimerUpCallback(void (*callback)()) : void
        + IncrementTime() : void
        + DecrementTime() : void
        + StartTimer() : void
        + PauseTimer() : void
        + ResumeTimer() : void
        + ResetTimer() : void
        + GetTimerTime() : unsigned int
        + IsConfiguringTimer() : bool
        + IsTimerRunning() : bool
        + IsTimerPaused() : bool
        + IsTimeUp() : bool
    }

    ' Includes
    StateEvent - -> Timer
    StateEvent - -> Stopwatch

}

package Drivers <<Rectangle>>
{
    class Buzzer_Treiber
    {
        .. Definitions ..
        # SEMAPHORE_TIMEOUT = 100 ms
        # DEFAULT_BUZZER_DELAY = 10 ms
        .. Static Variables ..
        + buzzerSemaphoreHandleId : osSemaphoreId_t
        - {static} buzzUntil : long
        - {static} isBuzzerOn : bool
        .. Internal Functions ..
        - SetBuzzer(bool state) : void
        - IsBuzzTimeReached() : bool
        .. Global Functions ..
        + BuzzerTask(void *argument) : void
        + BuzzerBeep(int length) : void
    }
    note left of Buzzer_Treiber::SetBuzzer
      Writes to the buzzer pin and 
      use the buzzer semaphore
    end note

    abstract SEG_Driver {}
    note right of SEG_Driver
        File for the 7-segment display
        Not to be used directly but only by Display_Treiber
    end note

    class Display_Treiber <? extends SEG_Driver> 
    {
        .. Definitions ..
        # FORMAT_DECIMAL_POINT_M_S_F = SEG_Driver_DP_2 | SEG_Driver_DP_4
        # FORMAT_DECIMAL_POINT_M_S = SEG_Driver_DP_3
        .. Internal Functions ..
        - ConvertTimeToDisplay(unsinged int tenths, int *decimalPoint) : int
        - WriteTimeToDisplay(unsigned int time, int flashSpeed) : void
        .. Global Functions ..
        + DisplayUpdateTask(void *argument) : void
        + DisplayTime(unsigned int time) : void
        + DisplayFlashTime(unsigned int time, DisplayFlashSpeed flashSpeed) : void
    }
    enum DisplayFlashSpeed
    {
        OFF
        SLOW
        FAST
    }
    Display_Treiber - -* SEG_Driver
    Display_Treiber -> DisplayFlashSpeed

    class LED_Treiber
    {
        .. Definitions ..
        # SEMAPHORE_TIMEOUT = 100 ms
        .. Static Variables ..
        + ledSemaphoreHandleId : osSemaphoreId_t
        .. Static Functions ..
        LED_Toggle(Led led) : void
        LED_Set(Led led, bool state) : void
    }
    note top of LED_Treiber
        LED_Toggle and LED_Set write to the LED pins and
        use the LED semaphore
    end note
    enum Led
    {
        LED1
        LED2
        LED3
        LED4
    }
    LED_Treiber -> Led

    class Taster_Treiber
    {
        .. Definitions ..
        # AMOUNT_OF_TASTERS = 3
        .. Static Variables ..
        - {static} TASTER_STATUS : bool[AMOUNT_OF_TASTERS]
        - {static} TASTER_HAS_CHANGED : bool[AMOUNT_OF_TASTERS]
        - {static} TASTER_CALLBACK : void(*)[AMOUNT_OF_TASTERS]
        - {static} TASTER_LONG_CALLBACK : void(*)[AMOUNT_OF_TASTERS]
        .. Static Functions ..
        - Update_Taster(Taster taster) : void
        - HasCallback(Taster taster) : bool
        - HasLongCallback(Taster taster) : bool
        - IsLongPress(Taster taster) : bool
        - TriggerCallback(Taster taster) : void
        .. Global Functions ..
        + TasterTask(void *argument) : void
        + Set_Taster_Callback(Taster taster, void (*callback)(void)) : void
        + Set_Taster_Long_Callback(Taster taster, void (*callback)(void)) : void
        + Taster_Pressed(Taster taster) : void
        + Taster_Get(Taster taster) : bool
    }
    note left of Taster_Treiber::Update_Taster
        Reads the taster pin and 
        sets the taster status
    end note
    note left of Taster_Treiber::TasterTask
        Triggers the callbacks and 
        checks for long presses
        When a callback is triggered,
        the buzzer is beeped
    end note
    note left of Taster_Treiber::Taster_Pressed
        Is called by the interrupt handler
    end note
    enum Taster
    {
        TASTER_1
        TASTER_2
        TASTER_3
    }
    Taster_Treiber -> Taster
    Taster_Treiber - -> Buzzer_Treiber
}
StateEvent - -> Drivers
note on link
    The StateEvent uses all drivers
end note

@enduml

@startuml "M242 - Class Diagram"
title M242 - Class Diagram
hide empty members

package StateEventFiles <<Rectangle>> {
    class StateEvent
    {
        .. Definitions ..
        # TIMER_CHANGE_DELAY = 250 ms
        # TIMER_CHANGE_DELAY_FAST = 50 ms
        .. Static Variables ..
        - {static} currentState : State
        - {static} hasStateChanged : bool
        .. Internal Functions ..
        - ChangeState() : void
        - InitStateEvent() : void
        - ShowLedState() : void
        - ShowCurrentTime() : void
        ..
        - Stoppuhr_LeereZeitAnzeigen() : void
        - Stoppuhr_AktuelleZeitAnzeigen() : void
        - Stoppuhr_ZwischenzeitAnzeigen() : void
        - Stoppuhr_EndzeitAnzeigen() : void
        ..
        - Timer_EingerichteteZeitAnzeigen() : void
        - Timer_ZeitErhoehen() : void
        - Timer_ZeitVerringern() : void
        - Timer_AktuelleZeitAnzeigen() : void
        - Timer_Pausieren() : void
        - Timer_TimerAbgelaufen() : void
        .. Global Functions ..
        + StateEventTask(void *argument) : void
    }
    enum State
    {
        STATE_STOPWATCH
        STATE_TIMER
    }
    StateEvent -> State

    class Stopwatch
    {
        .. Static Variables ..
        - {static} isStopwatchRunning : bool
        - {static} isShowingIntermediateTime : bool
        - {static} currentTime : unsigned int
        - {static} intermediateTime : unsigned int
        .. Global Functions ..
        + StopwatchTask(void *argument) : void
        + StartStopwatch() : void
        + StopStopwatch() : void
        + ResetStopwatch() : void
        + ShowIntermediateTime() : void
        + GetStopwatchTime() : unsigned int
        + IsStopwatchRunning() : bool
        + IsShowingIntermediateTime() : bool
    }

    class Timer
    {
        .. Static Variables ..
        - {static} isConfiguringTimer : bool
        - {static} isTimerRunning : bool
        - {static} isTimeUp : bool
        - {static} currentTime : unsigned int
        - {static} timerUpCallback : void(*)
        .. Global Functions ..
        + TimerTask(void *argument) : void
        + SetTimerUpCallback(void (*callback)()) : void
        + IncrementTime() : void
        + DecrementTime() : void
        + StartTimer() : void
        + PauseTimer() : void
        + ResumeTimer() : void
        + ResetTimer() : void
        + GetTimerTime() : unsigned int
        + IsConfiguringTimer() : bool
        + IsTimerRunning() : bool
        + IsTimerPaused() : bool
        + IsTimeUp() : bool
    }

    StateEvent - -> Timer
    StateEvent - -> Stopwatch

}

package Drivers <<Rectangle>>
{
    class Buzzer_Treiber
    {
        .. Definitions ..
        # SEMAPHORE_TIMEOUT = 100 ms
        # DEFAULT_BUZZER_DELAY = 10 ms
        .. Static Variables ..
        + buzzerSemaphoreHandleId : osSemaphoreId_t
        - {static} buzzUntil : long
        - {static} isBuzzerOn : bool
        .. Internal Functions ..
        - SetBuzzer(bool state) : void
        - IsBuzzTimeReached() : bool
        .. Global Functions ..
        + BuzzerTask(void *argument) : void
        + BuzzerBeep(int length) : void
    }
    note left of Buzzer_Treiber::SetBuzzer
      Writes to the buzzer pin and 
      use the buzzer semaphore
    end note

    abstract SEG_Driver {}
    note right of SEG_Driver
        File for the 7-segment display
        Not to be used directly but only by Display_Treiber
    end note

    class Display_Treiber <? extends SEG_Driver> 
    {
        .. Definitions ..
        # FORMAT_DECIMAL_POINT_M_S_F = SEG_Driver_DP_2 | SEG_Driver_DP_4
        # FORMAT_DECIMAL_POINT_M_S = SEG_Driver_DP_3
        .. Internal Functions ..
        - ConvertTimeToDisplay(unsinged int tenths, int *decimalPoint) : int
        - WriteTimeToDisplay(unsigned int time, int flashSpeed) : void
        .. Global Functions ..
        + DisplayUpdateTask(void *argument) : void
        + DisplayTime(unsigned int time) : void
        + DisplayFlashTime(unsigned int time, DisplayFlashSpeed flashSpeed) : void
    }
    enum DisplayFlashSpeed
    {
        OFF
        SLOW
        FAST
    }
    Display_Treiber - -* SEG_Driver
    Display_Treiber -> DisplayFlashSpeed

    class LED_Treiber
    {
        .. Definitions ..
        # SEMAPHORE_TIMEOUT = 100 ms
        .. Static Variables ..
        + ledSemaphoreHandleId : osSemaphoreId_t
        .. Static Functions ..
        LED_Toggle(Led led) : void
        LED_Set(Led led, bool state) : void
    }
    note top of LED_Treiber
        LED_Toggle and LED_Set write to the LED pins and
        use the LED semaphore
    end note
    enum Led
    {
        LED1
        LED2
        LED3
        LED4
    }
    LED_Treiber -> Led

    class Taster_Treiber
    {
        .. Definitions ..
        # AMOUNT_OF_TASTERS = 3
        .. Static Variables ..
        - {static} TASTER_STATUS : bool[AMOUNT_OF_TASTERS]
        - {static} TASTER_HAS_CHANGED : bool[AMOUNT_OF_TASTERS]
        - {static} TASTER_CALLBACK : void(*)[AMOUNT_OF_TASTERS]
        - {static} TASTER_LONG_CALLBACK : void(*)[AMOUNT_OF_TASTERS]
        .. Static Functions ..
        - Update_Taster(Taster taster) : void
        - HasCallback(Taster taster) : bool
        - HasLongCallback(Taster taster) : bool
        - IsLongPress(Taster taster) : bool
        - TriggerCallback(Taster taster) : void
        .. Global Functions ..
        + TasterTask(void *argument) : void
        + Set_Taster_Callback(Taster taster, void (*callback)(void)) : void
        + Set_Taster_Long_Callback(Taster taster, void (*callback)(void)) : void
        + Taster_Pressed(Taster taster) : void
        + Taster_Get(Taster taster) : bool
    }
    note left of Taster_Treiber::Update_Taster
        Reads the taster pin and 
        sets the taster status
    end note
    note left of Taster_Treiber::TasterTask
        Triggers the callbacks and 
        checks for long presses
        When a callback is triggered,
        the buzzer is beeped
    end note
    note left of Taster_Treiber::Taster_Pressed
        Is called by the interrupt handler
    end note
    enum Taster
    {
        TASTER_1
        TASTER_2
        TASTER_3
    }
    Taster_Treiber -> Taster
    Taster_Treiber - -> Buzzer_Treiber
}
StateEvent - -> Drivers
note on link
    The StateEvent uses all drivers
end note

@enduml

PlantUML version 1.2022.7(Mon Aug 22 19:01:30 CEST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: de
Country: CH
--></g></svg>